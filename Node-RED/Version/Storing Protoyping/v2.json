[
    {
        "id": "d1258a138c1d9aca",
        "type": "tab",
        "label": "ujicoba svg akhtar",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e624532f94b38939",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "name": "Cylinder Control",
        "style": {
            "label": true
        },
        "nodes": [
            "a7bcd60733fbde92",
            "ab033258bac3b213",
            "c3107cc2ab8d6f43",
            "89712ad2c49adb76",
            "334734ede2162faf",
            "3c1afc1d33b16d3a",
            "cae5c5af91c625c6",
            "77fd76c38ccf4db5",
            "a6734c00bf0e0f0d",
            "2002dd6d71997414",
            "ecadba9b2be4d1de",
            "ed6b635d51cf9762",
            "1fecf06a7d234d87",
            "cfe1be153db13834"
        ],
        "x": 1414,
        "y": 859,
        "w": 952,
        "h": 388
    },
    {
        "id": "1511e2ef7dd47ac2",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "name": "Gripper Control",
        "style": {
            "label": true
        },
        "nodes": [
            "6905fd314d8c9819",
            "b522c07697ef0705",
            "d8f079eae49db3ea",
            "3385436ed582e278",
            "95964f1ae5637553",
            "be5fd39a4195046b",
            "aebb64573be8a404",
            "0927270dd7e4b6b2",
            "80852dd58a772a11",
            "1ba4a0f83b47b623",
            "6641c356d4ac04af",
            "dbfec8c9f1e73fef",
            "ae885b8654c17c1a",
            "1330e5b198b13967",
            "29483d6a89593dc3"
        ],
        "x": 1488,
        "y": 1219,
        "w": 738,
        "h": 508
    },
    {
        "id": "c8250f5d05a71c0b",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "name": "Hide Feature",
        "style": {
            "label": true
        },
        "nodes": [
            "46d4442e1543816d",
            "1ff0af55431009ee",
            "7c4c00c9f1e27929",
            "d6cb3890b24478de"
        ],
        "x": 714,
        "y": 319,
        "w": 432,
        "h": 122
    },
    {
        "id": "e9d28f35840dbe47",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "name": "Status Set (Not use)",
        "style": {
            "label": true
        },
        "nodes": [
            "6473f1d95843b0e7",
            "e79499eb652b3c0c",
            "98e841bda1bc8fd3",
            "774dcb4bd3447e23",
            "0939be7a1f606280",
            "28a01b292bab863a"
        ],
        "x": 714,
        "y": 159,
        "w": 312,
        "h": 162
    },
    {
        "id": "7b88dd142459488a",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "name": "Change WP Color and hold WP (GET DATA FROM FINS)",
        "style": {
            "label": true
        },
        "nodes": [
            "3e4c8219a8c62e74",
            "010e1d4a37c2faad",
            "db7cc778322dd02b",
            "57ddb46be243855a",
            "961bea6de62e4858",
            "e6c2a5b8d10729a4",
            "8620e2a7f12e1554"
        ],
        "x": 1494,
        "y": 1739,
        "w": 632,
        "h": 202
    },
    {
        "id": "a6734c00bf0e0f0d",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "g": "e624532f94b38939",
        "name": "Send Destination Value",
        "style": {
            "label": true
        },
        "nodes": [
            "340ee3ccaa0f2d69",
            "267f33c8ef19735a",
            "1d35681336b5f85a",
            "80fa362a3942e24d",
            "5a05a13cf467a2a4",
            "be6a419e718a8dc9",
            "ef594e58255d0af8",
            "805bb529fa16caa0",
            "0dfe2c8b852bf8d4",
            "0c8494e29d32ad5a",
            "86227f5f6a5e40b4",
            "96fcbfa8d56a36e7",
            "f16bd81456122a34",
            "dcb7df177f53913f",
            "74e5c1fcf8b1dfe4",
            "301a6ef58cb1fc04"
        ],
        "x": 1474,
        "y": 1059,
        "w": 582,
        "h": 162
    },
    {
        "id": "29483d6a89593dc3",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "g": "1511e2ef7dd47ac2",
        "name": "Set global variable if both gripper is On",
        "style": {
            "label": true
        },
        "nodes": [
            "5590bbca09a69115",
            "e6a72356b3ae8e8c"
        ],
        "x": 1514,
        "y": 1419,
        "w": 472,
        "h": 82
    },
    {
        "id": "ae885b8654c17c1a",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "g": "1511e2ef7dd47ac2",
        "name": "Activate Manual",
        "style": {
            "label": true
        },
        "nodes": [
            "b1162d2d2ce002db",
            "217e46dda1beb004"
        ],
        "x": 1514,
        "y": 1619,
        "w": 452,
        "h": 82
    },
    {
        "id": "1330e5b198b13967",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "g": "1511e2ef7dd47ac2",
        "name": "Auto Show Holdworkpiece and Auto Set Transparant 'Workpiece'",
        "style": {
            "label": true
        },
        "nodes": [
            "ed93dee30e3578b5",
            "7a604deea4bc85df",
            "98dccc0d7954e490"
        ],
        "x": 1514,
        "y": 1519,
        "w": 532,
        "h": 82
    },
    {
        "id": "1ea5fb25c5a8d949",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "name": "Change Level Color | Data via global",
        "style": {
            "label": true
        },
        "nodes": [
            "697086cb993ce7f5",
            "f13148c2ed906aae",
            "312157667dbf9538",
            "80b2f1bab0225da8",
            "65c21d79a525975c"
        ],
        "x": 1462,
        "y": 207,
        "w": 704,
        "h": 640
    },
    {
        "id": "f13148c2ed906aae",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "g": "1ea5fb25c5a8d949",
        "name": "Manual Version (Not use)",
        "style": {
            "label": true
        },
        "nodes": [
            "b1d29dabd28650f0",
            "b43135a64608ee8e",
            "5ba6af4dfa799fd8",
            "63572de6a66b588f",
            "9078b014beae7309",
            "14b6716ce15cb47a",
            "1f9bbb804ca21485",
            "abe011ae8588522a",
            "3206180f3a640dd3",
            "feb60fb7caf43d1c",
            "a3baefea126cf618",
            "33cd0df0fb6c2c5d"
        ],
        "x": 1634,
        "y": 539,
        "w": 432,
        "h": 282
    },
    {
        "id": "65c21d79a525975c",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "g": "1ea5fb25c5a8d949",
        "name": "Get Target Level Data from FINS",
        "style": {
            "label": true
        },
        "nodes": [
            "6001ac516fce6355",
            "1626dfd5a07d0839"
        ],
        "x": 1488,
        "y": 233,
        "w": 458,
        "h": 254
    },
    {
        "id": "4841c9fc618956e0",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "g": "6953ea6bf366c58c",
        "name": "Dynamic Servo Control",
        "style": {
            "label": true
        },
        "nodes": [
            "363199e333b3f028",
            "f321dcab23cb149a",
            "1b6bf7781ca27473",
            "95677cebb9038517",
            "f1a723ea93995931",
            "5994370d030e9397",
            "d9b8512bd6cf977e",
            "856e50a79488239e",
            "a81bd65182eb57fa",
            "3faddc5e360ef65d",
            "33a67384ab089597",
            "a3b7949ab92eb6e6",
            "7a32afd957eec1b5",
            "28fe7a0e0044c06c",
            "1cc13e9e1d7966d9",
            "6eb2702ec66a3a1b",
            "5567807427c15d35",
            "02651f5131b0b3c2",
            "fc50e90573f2108c",
            "4faae1ad554294d4",
            "e1d4c6ade7d09bab",
            "c4be188918046853",
            "e0c2dd9114fdabf0"
        ],
        "x": 274,
        "y": 979,
        "w": 612,
        "h": 462
    },
    {
        "id": "a72686750235ef2c",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "g": "6953ea6bf366c58c",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "6355f4a4c200c7c2",
            "765b1bceeb0d1231",
            "ab7a0e094b59725e",
            "e2c1ad1b7694f66e",
            "64f77d8e75d1d851"
        ],
        "x": 744,
        "y": 659,
        "w": 462,
        "h": 122
    },
    {
        "id": "753bdcfe95bad03c",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "g": "6953ea6bf366c58c",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "9cd9cad7b0f2fbfe",
            "286706e8950c7eb7",
            "b2f268a119212e3a",
            "c8d1c6af4617609c",
            "788ba742b43e5892",
            "44e5ef0a0efb34cd",
            "88b95fbf336c418d",
            "73327eea294e6bdd",
            "b9003eda62a670ba",
            "96cc15ec15d559bd",
            "0f51037132232d8b",
            "c980388ff65353c2",
            "978024dafaa278df",
            "542c7ba64e8e1e87",
            "0b064ca22cf607fb",
            "73a34fe489eeac30",
            "509409410fe850b7",
            "1d88a108c4b1b554",
            "7d1827569c1c8aeb",
            "6e60bea31563fd89",
            "6153bdfd8f747160",
            "75e8d5989ad00bab",
            "37324fb6a76b7440",
            "167f2a0ac6a05cba",
            "6333735174ce5d31",
            "d86065ceec840331",
            "e59a7d105551221f",
            "ad1d334b1d2275b1",
            "7f8670d616fb8fdb",
            "4f66b3b09506b45f",
            "1a57759c8f78a59e",
            "cf1fb4015d0f2b06",
            "23b057707d08e6d0",
            "cb6ac16235092836",
            "b306c436d8f39c9d",
            "206f416a3dc24c34",
            "a56d125a7ecaffd4",
            "0f492fbea8605de5",
            "a14c7016f95b17f9",
            "f8cf790c1655479e"
        ],
        "x": 908,
        "y": 973,
        "w": 454,
        "h": 708
    },
    {
        "id": "f8cf790c1655479e",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "Activate Cal",
        "style": {
            "label": true
        },
        "nodes": [
            "dcbefbe7bbef80d3",
            "7c1f641867f584ea",
            "d3633c5e1a417542"
        ],
        "x": 934,
        "y": 999,
        "w": 402,
        "h": 82
    },
    {
        "id": "6953ea6bf366c58c",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "name": "Servo Control",
        "style": {
            "label": true
        },
        "nodes": [
            "4841c9fc618956e0",
            "a72686750235ef2c",
            "753bdcfe95bad03c"
        ],
        "x": 248,
        "y": 633,
        "w": 1140,
        "h": 1074
    },
    {
        "id": "24afd8564242d88d",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "name": "Hide All WP when first Run and Show WP Button",
        "style": {
            "label": true
        },
        "nodes": [
            "e6d3505743a3dafb",
            "b14fc22a1687023e",
            "7a8ab9082613a195",
            "45ae3b1474fabd20",
            "eb7e0b64c6bf9077",
            "cd33161930c5ce83",
            "1af7bb270310af60"
        ],
        "x": 714,
        "y": 459,
        "w": 402,
        "h": 122
    },
    {
        "id": "23bc4fdaf41c77e5",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "name": "Get Target Position Data from FINS",
        "style": {
            "label": true
        },
        "nodes": [
            "393ee240bf1e5d47",
            "1be0ba4d36d4fe56"
        ],
        "x": 2188,
        "y": 213,
        "w": 558,
        "h": 374
    },
    {
        "id": "9d12d8e1ae562be5",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "name": "Change WP Color and hold WP (UNUSED)",
        "style": {
            "label": true
        },
        "nodes": [
            "282c706588d25d96",
            "b4acf7b4f04cf694",
            "a3bd063a4715999f",
            "93ec88d1320110a4",
            "94e6fbbb620c60bd",
            "d3fbb98dc8a0ee6e"
        ],
        "x": 794,
        "y": 1739,
        "w": 592,
        "h": 202
    },
    {
        "id": "3bf174fb986ebf16",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "name": "UJICOBA DATA DARI PROGRAM",
        "style": {
            "label": true
        },
        "nodes": [
            "10fc68894eb11586",
            "effdde2550dea669",
            "865f9da0074b0934",
            "70d0fbbecd29ed40",
            "d6a8e3e24db7c665"
        ],
        "x": 2174,
        "y": 1739,
        "w": 539,
        "h": 202
    },
    {
        "id": "d6a8e3e24db7c665",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "g": "3bf174fb986ebf16",
        "name": "Color from Program PLC (=/IO PLC) to Global",
        "style": {
            "label": true
        },
        "nodes": [
            "d6c2105b75e10ec5"
        ],
        "x": 2394,
        "y": 1799,
        "w": 293,
        "h": 82
    },
    {
        "id": "1626dfd5a07d0839",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "g": "65c21d79a525975c",
        "name": "Simulation Level Target Data from PLC",
        "style": {
            "label": true
        },
        "nodes": [
            "b5e0d741a5dba7e7",
            "ebf2c882d01e711e",
            "cc69f402262ab88e",
            "2f6f7a03df07875e"
        ],
        "x": 1514,
        "y": 259,
        "w": 250,
        "h": 202
    },
    {
        "id": "1be0ba4d36d4fe56",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "g": "23bc4fdaf41c77e5",
        "name": "Simulation Position Target Data from PLC",
        "style": {
            "label": true
        },
        "nodes": [
            "439356305001c3a2",
            "6fe410ecb2d06a5e",
            "cde52b07091342ea",
            "7a3f1dea40f11df3",
            "e21f698919d02d4f",
            "e48f47bea496f366",
            "2c56a954cf18b768"
        ],
        "x": 2214,
        "y": 239,
        "w": 266,
        "h": 322
    },
    {
        "id": "829cca9a30732cde",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "name": "Get Current Sequens Data from FINS",
        "style": {
            "label": true
        },
        "nodes": [
            "57b96a9474438c29",
            "2c234315dbd56053",
            "d58a56dc5d967ea7"
        ],
        "x": 2508,
        "y": 393,
        "w": 558,
        "h": 694
    },
    {
        "id": "2c234315dbd56053",
        "type": "group",
        "z": "d1258a138c1d9aca",
        "g": "829cca9a30732cde",
        "name": "Simulation Sequence Data from PLC",
        "style": {
            "label": true
        },
        "nodes": [
            "1964c9b1ebabdc2b",
            "ef4ef21846ae36f2",
            "c466069b69c43e3d",
            "1a6acf0639843569",
            "50ec07f9b7144ee5",
            "5071ec1cfb82f113",
            "261d670554712e0b",
            "806a203fb95d1f56",
            "869e3c53499b69c3",
            "14dd4fdc2b997e46",
            "52557f95afa1477e",
            "65e56db5f1bfabfe",
            "05e90e3ff2b4cd45",
            "28b5067dd9ae161e",
            "3d9d467ce6d1c908",
            "5c141cb23ab4688b",
            "5649f67a087b6931",
            "0c1bd7f7bfca7e71",
            "01a1540fede116bd",
            "fd4b17e5c4b5e011",
            "760456f1c8bcf7e4",
            "9ac1951c15e5240f"
        ],
        "x": 2534,
        "y": 419,
        "w": 242,
        "h": 642
    },
    {
        "id": "7eceb39346e3365a",
        "type": "ui_template",
        "z": "d1258a138c1d9aca",
        "group": "727df6176172cba7",
        "name": "V1",
        "order": 3,
        "width": 10,
        "height": 10,
        "format": "<div id=\"graphics\" ng-init=\"checkSVG()\">\n\n    <!-- SVG FILE CONTENT BELOW -->\n\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><svg\n   width=\"127mm\"\n   height=\"131mm\"\n   viewBox=\"0 0 254.63912963867188 262.8345642089844\"\n   version=\"1.1\"\n   id=\"svg1\"\n   xml:space=\"preserve\"\n   inkscape:version=\"1.3.2 (091e20e, 2023-11-25, custom)\"\n   sodipodi:docname=\"V3.4_Level teks problem.svg\"\n   preserveAspectRatio=\"xMinYMin meet\"\n   xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n   xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n   xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n   xmlns=\"http://www.w3.org/2000/svg\"\n   xmlns:svg=\"http://www.w3.org/2000/svg\">\n    <rect\n   id=\"svgEditorBackground\"\n   x=\"0\"\n   y=\"0\"\n   width=\"254.63912963867188\"\n   height=\"262.8345642089844\"\n   style=\"fill:none;stroke:none\" />\n\n    <sodipodi:namedview\n   id=\"namedview1\"\n   pagecolor=\"#ffffff\"\n   bordercolor=\"#000000\"\n   borderopacity=\"0.25\"\n   inkscape:showpageshadow=\"2\"\n   inkscape:pageopacity=\"0.0\"\n   inkscape:pagecheckerboard=\"0\"\n   inkscape:deskcolor=\"#d1d1d1\"\n   inkscape:document-units=\"mm\"\n   showgrid=\"true\"\n   inkscape:zoom=\"1.0263363\"\n   inkscape:cx=\"155.40715\"\n   inkscape:cy=\"255.76412\"\n   inkscape:window-width=\"1920\"\n   inkscape:window-height=\"1009\"\n   inkscape:window-x=\"-8\"\n   inkscape:window-y=\"-8\"\n   inkscape:window-maximized=\"1\"\n   inkscape:current-layer=\"layer1\">\n        <inkscape:page\n   x=\"0\"\n   y=\"0\"\n   width=\"254.63913\"\n   height=\"262.83456\"\n   id=\"page1\"\n   margin=\"0\"\n   bleed=\"0\"\n   inkscape:export-filename=\"..\\..\\Storing\\V2_Storing.svg\"\n   inkscape:export-xdpi=\"96\"\n   inkscape:export-ydpi=\"96\" />\n        <inkscape:grid\n   id=\"grid14\"\n   units=\"mm\"\n   originx=\"65.597664\"\n   originy=\"36.898701\"\n   spacingx=\"0.99999998\"\n   spacingy=\"1\"\n   empcolor=\"#0099e5\"\n   empopacity=\"0.30196078\"\n   color=\"#0099e5\"\n   opacity=\"0.14901961\"\n   empspacing=\"5\"\n   dotted=\"false\"\n   gridanglex=\"30\"\n   gridanglez=\"30\"\n   visible=\"true\" />\n    </sodipodi:namedview>\n    <defs\n   id=\"defs1\"><linearGradient\n   id=\"linearGradient1\"\n   inkscape:collect=\"always\"><stop\n     style=\"stop-color:#ffffff;stop-opacity:1;\"\n     offset=\"0\"\n     id=\"stop1\" /><stop\n     style=\"stop-color:#ffffff;stop-opacity:0;\"\n     offset=\"1\"\n     id=\"stop2\" /></linearGradient><rect\n   x=\"24.802635\"\n   y=\"183.95287\"\n   width=\"135.72553\"\n   height=\"85.431298\"\n   id=\"rect27\" />\n        <linearGradient\n   id=\"swatch76\"\n   inkscape:swatch=\"solid\">\n            <stop\n   style=\"stop-color:#7f7f7f;stop-opacity:1;\"\n   offset=\"0\"\n   id=\"stop76\" />\n        </linearGradient>\n        <linearGradient\n   id=\"swatch73\"\n   inkscape:swatch=\"solid\">\n            <stop\n   style=\"stop-color:#7f7f7f;stop-opacity:1;\"\n   offset=\"0\"\n   id=\"stop73\" />\n        </linearGradient>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        <linearGradient\n   id=\"SVGID_1_-7-9\"\n   gradientUnits=\"userSpaceOnUse\"\n   x1=\"2.0269001\"\n   y1=\"62.099602\"\n   x2=\"40.726601\"\n   y2=\"62.099602\">\n            <stop\n   offset=\"0.01\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop1-0-4\" />\n            <stop\n   offset=\"0.51\"\n   style=\"stop-color:#F5F5F5\"\n   id=\"stop2-2-5\" />\n            <stop\n   offset=\"1\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop3-9-8\" />\n        </linearGradient>\n        <linearGradient\n   id=\"SVGID_1_-7-7\"\n   gradientUnits=\"userSpaceOnUse\"\n   x1=\"2.0269001\"\n   y1=\"62.099602\"\n   x2=\"40.726601\"\n   y2=\"62.099602\">\n            <stop\n   offset=\"0.01\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop1-0-3\" />\n            <stop\n   offset=\"0.51\"\n   style=\"stop-color:#F5F5F5\"\n   id=\"stop2-2-59\" />\n            <stop\n   offset=\"1\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop3-9-0\" />\n        </linearGradient>\n        <linearGradient\n   id=\"SVGID_1_-7-8\"\n   gradientUnits=\"userSpaceOnUse\"\n   x1=\"2.0269001\"\n   y1=\"62.099602\"\n   x2=\"40.726601\"\n   y2=\"62.099602\"\n   gradientTransform=\"matrix(1.0012569,0,0,0.64789387,-0.0268698,4.09532)\">\n            <stop\n   offset=\"0.01\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop1-0-0\" />\n            <stop\n   offset=\"0.51\"\n   style=\"stop-color:#F5F5F5\"\n   id=\"stop2-2-7\" />\n            <stop\n   offset=\"1\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop3-9-2\" />\n        </linearGradient>\n        <linearGradient\n   id=\"SVGID_1_-7-8-6\"\n   gradientUnits=\"userSpaceOnUse\"\n   x1=\"2.0269001\"\n   y1=\"62.099602\"\n   x2=\"40.726601\"\n   y2=\"62.099602\"\n   gradientTransform=\"matrix(1.0012569,0,0,0.64789387,-0.0268698,4.09532)\">\n            <stop\n   offset=\"0.01\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop1-0-0-3\" />\n            <stop\n   offset=\"0.51\"\n   style=\"stop-color:#F5F5F5\"\n   id=\"stop2-2-7-5\" />\n            <stop\n   offset=\"1\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop3-9-2-5\" />\n        </linearGradient>\n        <linearGradient\n   id=\"SVGID_1_-7-8-6-0\"\n   gradientUnits=\"userSpaceOnUse\"\n   x1=\"2.0269001\"\n   y1=\"62.099602\"\n   x2=\"40.726601\"\n   y2=\"62.099602\"\n   gradientTransform=\"matrix(1.0012569,0,0,0.64789387,-0.0268698,4.09532)\">\n            <stop\n   offset=\"0.01\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop1-0-0-3-2\" />\n            <stop\n   offset=\"0.51\"\n   style=\"stop-color:#F5F5F5\"\n   id=\"stop2-2-7-5-8\" />\n            <stop\n   offset=\"1\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop3-9-2-5-7\" />\n        </linearGradient>\n        <linearGradient\n   id=\"SVGID_1_-7-8-6-5\"\n   gradientUnits=\"userSpaceOnUse\"\n   x1=\"2.0269001\"\n   y1=\"62.099602\"\n   x2=\"40.726601\"\n   y2=\"62.099602\"\n   gradientTransform=\"matrix(1.0012569,0,0,0.64789387,-0.0268698,4.09532)\">\n            <stop\n   offset=\"0.01\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop1-0-0-3-1\" />\n            <stop\n   offset=\"0.51\"\n   style=\"stop-color:#F5F5F5\"\n   id=\"stop2-2-7-5-9\" />\n            <stop\n   offset=\"1\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop3-9-2-5-3\" />\n        </linearGradient>\n        <linearGradient\n   id=\"SVGID_1_-7-9-0\"\n   gradientUnits=\"userSpaceOnUse\"\n   x1=\"2.0269001\"\n   y1=\"62.099602\"\n   x2=\"40.726601\"\n   y2=\"62.099602\">\n            <stop\n   offset=\"0.01\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop1-0-4-0\" />\n            <stop\n   offset=\"0.51\"\n   style=\"stop-color:#F5F5F5\"\n   id=\"stop2-2-5-6\" />\n            <stop\n   offset=\"1\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop3-9-8-5\" />\n        </linearGradient>\n        <linearGradient\n   id=\"SVGID_1_-7-8-6-5-3\"\n   gradientUnits=\"userSpaceOnUse\"\n   x1=\"2.0269001\"\n   y1=\"62.099602\"\n   x2=\"40.726601\"\n   y2=\"62.099602\"\n   gradientTransform=\"matrix(1.0012569,0,0,0.64789387,-0.0268698,4.09532)\">\n            <stop\n   offset=\"0.01\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop1-0-0-3-1-5\" />\n            <stop\n   offset=\"0.51\"\n   style=\"stop-color:#F5F5F5\"\n   id=\"stop2-2-7-5-9-1\" />\n            <stop\n   offset=\"1\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop3-9-2-5-3-7\" />\n        </linearGradient>\n        <linearGradient\n   id=\"SVGID_1_-7-9-2\"\n   gradientUnits=\"userSpaceOnUse\"\n   x1=\"2.0269001\"\n   y1=\"62.099602\"\n   x2=\"40.726601\"\n   y2=\"62.099602\">\n            <stop\n   offset=\"0.01\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop1-0-4-9\" />\n            <stop\n   offset=\"0.51\"\n   style=\"stop-color:#F5F5F5\"\n   id=\"stop2-2-5-7\" />\n            <stop\n   offset=\"1\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop3-9-8-4\" />\n        </linearGradient>\n        <linearGradient\n   id=\"SVGID_1_-7-8-6-5-7\"\n   gradientUnits=\"userSpaceOnUse\"\n   x1=\"2.0269001\"\n   y1=\"62.099602\"\n   x2=\"40.726601\"\n   y2=\"62.099602\"\n   gradientTransform=\"matrix(1.0012569,0,0,0.64789387,-0.0268698,4.09532)\">\n            <stop\n   offset=\"0.01\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop1-0-0-3-1-3\" />\n            <stop\n   offset=\"0.51\"\n   style=\"stop-color:#F5F5F5\"\n   id=\"stop2-2-7-5-9-6\" />\n            <stop\n   offset=\"1\"\n   style=\"stop-color:#4D4D4D\"\n   id=\"stop3-9-2-5-3-3\" />\n        </linearGradient>\n        <linearGradient\n   id=\"SVGID_3_-2\"\n   gradientUnits=\"userSpaceOnUse\"\n   x1=\"6.9839001\"\n   y1=\"76.408203\"\n   x2=\"21.060499\"\n   y2=\"76.408203\">\n            <stop\n   offset=\"0.01\"\n   style=\"stop-color:#ff0000;stop-opacity:1;\"\n   id=\"stop14-7\" />\n            <stop\n   offset=\"0.51321542\"\n   style=\"stop-color:#ffabab;stop-opacity:1;\"\n   id=\"stop15-7\" />\n            <stop\n   offset=\"1\"\n   style=\"stop-color:#ff0000;stop-opacity:1;\"\n   id=\"stop16-0\" />\n        </linearGradient>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    <linearGradient\n   inkscape:collect=\"always\"\n   xlink:href=\"#linearGradient1\"\n   id=\"linearGradient2\"\n   x1=\"26.271484\"\n   y1=\"226.16521\"\n   x2=\"68.458984\"\n   y2=\"226.16521\"\n   gradientUnits=\"userSpaceOnUse\" /><linearGradient\n   inkscape:collect=\"always\"\n   xlink:href=\"#linearGradient1\"\n   id=\"linearGradient3\"\n   x1=\"62.29017\"\n   y1=\"97.582373\"\n   x2=\"66.404282\"\n   y2=\"97.582373\"\n   gradientUnits=\"userSpaceOnUse\" /></defs>\n    <g\n   inkscape:groupmode=\"layer\"\n   id=\"layer1\"\n   inkscape:label=\"storingstation\"\n   inkscape:highlight-color=\"#e3c63b\">\n        <g\n   id=\"g41-2\"\n   transform=\"translate(-315.50527,-43.950703)\"\n   inkscape:label=\"end catcher\"\n   style=\"display:inline\"\n   sodipodi:insensitive=\"true\">\n            <rect\n   style=\"opacity:1;fill:#cecaca;fill-opacity:1;stroke:#000000;stroke-width:0.499999;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"rect39-7\"\n   width=\"32.969677\"\n   height=\"33.652985\"\n   x=\"319.27634\"\n   y=\"230.27527\" />\n            <path\n   style=\"display:inline;fill:#c54141;fill-opacity:1;stroke:#000000;stroke-width:0.501592;stroke-dasharray:none;stroke-opacity:1\"\n   d=\"m 152.61052,179.45734 15.98069,0.0185 10.05776,-9.54276 0.0909,-6.48303 -10.14865,-10.4213 h -16.08637 z\"\n   id=\"path40-7\"\n   sodipodi:nodetypes=\"ccccccc\"\n   transform=\"translate(166.9535,80.84941)\" />\n\n        </g>\n        <g\n   id=\"workpiece@cx_hide\"><circle\n     style=\"display:inline;fill:#979797;stroke-width:0.340492\"\n     id=\"workpiece@cx_color\"\n     cx=\"15.645728\"\n     cy=\"203.64833\"\n     r=\"14.445869\"\n     inkscape:label=\"workpiece@cx_color\" /></g>\n        <g\n   id=\"g6\"\n   inkscape:label=\"Level 3\"\n   transform=\"matrix(0.83605142,0.08904314,-0.08904314,0.83605142,40.858266,32.918672)\"\n   style=\"display:inline\"\n   sodipodi:insensitive=\"true\">\n            <path\n   style=\"opacity:1;fill:#cecaca;fill-opacity:1;stroke:#000000;stroke-width:0.5668;stroke-dasharray:none;stroke-opacity:1\"\n   d=\"m -16.366734,152.8781 35.293628,23.31574 c 0,0 1.139303,0.48909 1.737251,0.45717 0.683937,-0.0365 1.920119,-0.73148 1.920119,-0.73148 0,0 30.574188,-48.07186 95.548816,-56.50638 66.83639,-8.6762 110.54403,33.92212 110.54403,33.92212 0,0 1.00046,0.81013 1.60009,0.82291 0.65442,0.0139 1.78298,-0.82291 1.78298,-0.82291 l 29.12181,-30.40189 c 0,0 0.20464,-1.00824 0.13715,-1.50867 -0.0696,-0.51614 -0.54861,-1.46295 -0.54861,-1.46295 0,0 -54.09134,-55.158062 -146.66056,-46.631477 C 28.825457,81.18587 -17.281077,149.6779 -17.281077,149.6779 c 0,0 -0.302324,1.21023 -0.137151,1.78297 0.163,0.5652 1.051494,1.41723 1.051494,1.41723 z\"\n   id=\"path1\"\n   sodipodi:nodetypes=\"ccscscsccscscsc\"\n   inkscape:label=\"shelf\" />\n            <g\n   id=\"g7\"\n   inkscape:label=\"Rivet\">\n                <circle\n   style=\"opacity:1;fill:#979797;fill-opacity:1;stroke:#000000;stroke-width:0.366163;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"path6\"\n   cx=\"21.155411\"\n   cy=\"169.19897\"\n   r=\"1.4870372\" />\n                <circle\n   style=\"opacity:1;fill:#979797;fill-opacity:1;stroke:#000000;stroke-width:0.366163;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"path6-5\"\n   cx=\"-9.8713951\"\n   cy=\"148.4586\"\n   r=\"1.4870372\"\n   inkscape:label=\"path6-5\" />\n                <circle\n   style=\"opacity:1;fill:#979797;fill-opacity:1;stroke:#000000;stroke-width:0.366163;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"path6-5-7\"\n   cx=\"74.737938\"\n   cy=\"87.804916\"\n   r=\"1.4870372\" />\n                <circle\n   style=\"opacity:1;fill:#979797;fill-opacity:1;stroke:#000000;stroke-width:0.366163;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"path6-5-2\"\n   cx=\"87.022156\"\n   cy=\"120.87379\"\n   r=\"1.4870372\" />\n                <circle\n   style=\"opacity:1;fill:#979797;fill-opacity:1;stroke:#000000;stroke-width:0.366163;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"path6-5-0\"\n   cx=\"155.61017\"\n   cy=\"114.08901\"\n   r=\"1.4870372\" />\n                <circle\n   style=\"opacity:1;fill:#979797;fill-opacity:1;stroke:#000000;stroke-width:0.366163;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"path6-5-6\"\n   cx=\"161.42342\"\n   cy=\"78.930466\"\n   r=\"1.4870372\" />\n                <circle\n   style=\"opacity:1;fill:#979797;fill-opacity:1;stroke:#000000;stroke-width:0.366163;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"path6-5-20\"\n   cx=\"229.21533\"\n   cy=\"146.74252\"\n   r=\"1.4870372\" />\n                <circle\n   style=\"opacity:1;fill:#979797;fill-opacity:1;stroke:#000000;stroke-width:0.366163;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"path6-5-3\"\n   cx=\"253.87323\"\n   cy=\"120.49319\"\n   r=\"1.4870372\" />\n            </g>\n            <g\n   id=\"g4\"\n   inkscape:label=\"Position\">\n                <ellipse\n   style=\"opacity:1;fill:#aea8a8;fill-opacity:1;stroke:#000000;stroke-width:0.621975;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"path2\"\n   cx=\"19.640306\"\n   cy=\"142.60663\"\n   rx=\"17.054152\"\n   ry=\"16.661055\" />\n                <ellipse\n   style=\"opacity:1;fill:#aea8a8;fill-opacity:1;stroke:#000000;stroke-width:0.621975;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"path2-2\"\n   cx=\"56.527222\"\n   cy=\"115.99895\"\n   rx=\"17.054152\"\n   ry=\"16.661055\" />\n                <ellipse\n   style=\"opacity:1;fill:#aea8a8;fill-opacity:1;stroke:#000000;stroke-width:0.621975;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"path2-42\"\n   cx=\"97.730263\"\n   cy=\"99.909508\"\n   rx=\"17.054152\"\n   ry=\"16.661055\" />\n                <ellipse\n   style=\"opacity:1;fill:#aea8a8;fill-opacity:1;stroke:#000000;stroke-width:0.621975;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"path2-5\"\n   cx=\"141.79091\"\n   cy=\"95.077553\"\n   rx=\"17.054152\"\n   ry=\"16.661055\" />\n                <ellipse\n   style=\"opacity:1;fill:#aea8a8;fill-opacity:1;stroke:#000000;stroke-width:0.621975;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"path2-8\"\n   cx=\"185.04176\"\n   cy=\"102.59112\"\n   rx=\"17.054152\"\n   ry=\"16.661055\" />\n                <ellipse\n   style=\"opacity:1;fill:#aea8a8;fill-opacity:1;stroke:#000000;stroke-width:0.621975;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"path2-22\"\n   cx=\"224.98529\"\n   cy=\"121.34111\"\n   rx=\"17.054152\"\n   ry=\"16.661055\" />\n            </g>\n            <rect\n   style=\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.686038;stroke-dasharray:none;stroke-opacity:1;opacity:1\"\n   id=\"rect15\"\n   width=\"28.884092\"\n   height=\"11.467093\"\n   x=\"-41.336319\"\n   y=\"121.88777\"\n   transform=\"matrix(0.93569031,-0.7342272,0.7342272,0.93569031,-52.468856,-33.785817)\" />\n            <rect\n   style=\"fill:#000000;fill-opacity:1;stroke:#000000;stroke-width:0.686038;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"rect15-5\"\n   width=\"28.884092\"\n   height=\"11.467093\"\n   x=\"227.84752\"\n   y=\"-4.4006162\"\n   transform=\"matrix(1.0944442,0.46561556,-0.46561556,1.0944442,-52.468856,-33.785817)\" />\n        </g>\n        <g\n   id=\"p1@cx_hide\"\n   inkscape:label=\"p1\"><circle\n     style=\"display:inline;fill:#979797;stroke-width:0.340492\"\n     id=\"p1@cx_color\"\n     cx=\"44.298538\"\n     cy=\"153.63039\"\n     r=\"14.445869\" /></g>\n        <g\n   id=\"p2@cx_hide\"\n   inkscape:label=\"p2\"><circle\n     style=\"display:inline;fill:#979797;stroke-width:0.340492\"\n     id=\"p2@cx_color\"\n     cx=\"77.813454\"\n     cy=\"134.84106\"\n     r=\"14.445869\" /></g>\n        <g\n   id=\"p3@cx_hide\"\n   inkscape:label=\"p3\"><circle\n     style=\"display:inline;fill:#979797;stroke-width:0.340492\"\n     id=\"p3@cx_color\"\n     cx=\"114.01093\"\n     cy=\"124.89243\"\n     r=\"14.445869\" /></g>\n        <g\n   id=\"p4@cx_hide\"\n   inkscape:label=\"p4\"><circle\n     style=\"display:inline;fill:#979797;stroke-width:0.340492\"\n     id=\"p4@cx_color\"\n     cx=\"150.81009\"\n     cy=\"125.01138\"\n     r=\"14.445869\" /></g>\n        <g\n   id=\"p5@cx_hide\"\n   inkscape:label=\"p5\"><circle\n     style=\"display:inline;fill:#979797;stroke-width:0.340492\"\n     id=\"p5@cx_color\"\n     cx=\"186.68163\"\n     cy=\"135.64084\"\n     r=\"14.445869\" /></g>\n        <g\n   id=\"p6@cx_hide\"\n   inkscape:label=\"p6@cx_hide\"><circle\n     style=\"display:inline;fill:#979797;stroke-width:0.340492\"\n     id=\"p6@cx_color\"\n     cx=\"218.75026\"\n     cy=\"154.06796\"\n     r=\"14.445869\" /></g>\n        <g\n   id=\"g8\"\n   inkscape:label=\"front view\"\n   style=\"fill:#cecaca;fill-opacity:1;stroke:#000000;stroke-width:0.498583;stroke-dasharray:none;stroke-opacity:1\"\n   transform=\"translate(0,2.6542614)\"\n   sodipodi:insensitive=\"true\">\n            <rect\n   style=\"fill:#cecaca;fill-opacity:1;stroke:#000000;stroke-width:0.498583;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"level1@cx_color\"\n   width=\"236.60446\"\n   height=\"3.8199899\"\n   x=\"12.355979\"\n   y=\"77.486282\"\n   inkscape:label=\"level1\" /><rect\n   style=\"opacity:1;fill:#cecaca;fill-opacity:1;stroke:#000000;stroke-width:0.498583;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"level2@cx_color\"\n   width=\"236.60446\"\n   height=\"3.8199899\"\n   x=\"12.355979\"\n   y=\"52.964794\"\n   inkscape:label=\"level2\" />\n            \n            <rect\n   style=\"fill:#cecaca;fill-opacity:1;stroke:#000000;stroke-width:0.498583;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"level3@cx_color\"\n   width=\"236.60446\"\n   height=\"3.8199899\"\n   x=\"12.886823\"\n   y=\"28.443327\"\n   inkscape:label=\"level3\" />\n        </g>\n        <g\n   id=\"l1p1@cx_hide\"><rect\n     style=\"fill:#979797;fill-opacity:1;stroke:none;stroke-width:0.530024;stroke-dasharray:none;stroke-opacity:1\"\n     id=\"l1p1@cx_color\"\n     width=\"28.361715\"\n     height=\"16.830027\"\n     x=\"30.399572\"\n     y=\"62.825424\"\n     inkscape:label=\"l1p1@cx_color\" /></g>\n        <g\n   id=\"l2p1@cx_hide\"><rect\n     style=\"fill:#979797;fill-opacity:1;stroke:none;stroke-width:0.530024;stroke-dasharray:none;stroke-opacity:1\"\n     id=\"l2p1@cx_color\"\n     width=\"28.361715\"\n     height=\"16.830027\"\n     x=\"30.399572\"\n     y=\"38.319515\"\n     inkscape:label=\"l2p1@cx_color\" /></g>\n        <g\n   id=\"l3p1@cx_hide\"><rect\n     style=\"fill:#979797;fill-opacity:1;stroke:none;stroke-width:0.530024;stroke-dasharray:none;stroke-opacity:1\"\n     id=\"l3p1@cx_color\"\n     width=\"28.361715\"\n     height=\"16.830027\"\n     x=\"30.399572\"\n     y=\"13.801747\"\n     inkscape:label=\"l3p1@cx_color\" /></g>\n        <g\n   id=\"l1p2@cx_hide\"><rect\n     style=\"fill:#979797;fill-opacity:1;stroke:none;stroke-width:0.530024;stroke-dasharray:none;stroke-opacity:1\"\n     id=\"l1p2@cx_color\"\n     width=\"28.361715\"\n     height=\"16.830027\"\n     x=\"65.114075\"\n     y=\"62.910141\"\n     inkscape:label=\"l1p2@cx_color\" /></g>\n        <g\n   id=\"l2p2@cx_hide\"><rect\n     style=\"fill:#979797;fill-opacity:1;stroke:none;stroke-width:0.530024;stroke-dasharray:none;stroke-opacity:1\"\n     id=\"l2p2@cx_color\"\n     width=\"28.361715\"\n     height=\"16.830027\"\n     x=\"65.114075\"\n     y=\"38.404232\"\n     inkscape:label=\"l2p2@cx_color\" /></g>\n        <g\n   id=\"l3p2@cx_hide\"><rect\n     style=\"fill:#979797;fill-opacity:1;stroke:none;stroke-width:0.530024;stroke-dasharray:none;stroke-opacity:1\"\n     id=\"l3p2@cx_color\"\n     width=\"28.361715\"\n     height=\"16.830027\"\n     x=\"65.114075\"\n     y=\"13.886463\"\n     inkscape:label=\"l3p2@cx_color\" /></g>\n        <g\n   id=\"l1p3@cx_hide\"><rect\n     style=\"fill:#979797;fill-opacity:1;stroke:none;stroke-width:0.530024;stroke-dasharray:none;stroke-opacity:1\"\n     id=\"l1p3@cx_color\"\n     width=\"28.361715\"\n     height=\"16.830027\"\n     x=\"99.828583\"\n     y=\"63.069923\"\n     inkscape:label=\"l1p3@cx_color\" /></g>\n        <g\n   id=\"l2p3@cx_hide\"><rect\n     style=\"fill:#979797;fill-opacity:1;stroke:none;stroke-width:0.530024;stroke-dasharray:none;stroke-opacity:1\"\n     id=\"l2p3@cx_color\"\n     width=\"28.361715\"\n     height=\"16.830027\"\n     x=\"99.828583\"\n     y=\"38.564011\"\n     inkscape:label=\"l2p3@cx_color\" /></g>\n        <g\n   id=\"l3p3@cx_hide\"\n   inkscape:label=\"g14\"><rect\n     style=\"fill:#979797;fill-opacity:1;stroke:none;stroke-width:0.530024;stroke-dasharray:none;stroke-opacity:1\"\n     id=\"l3p3@cx_color\"\n     width=\"28.361715\"\n     height=\"16.830027\"\n     x=\"99.828583\"\n     y=\"14.046245\" /></g>\n        <g\n   id=\"l1p4@cx_hide\"><rect\n     style=\"fill:#979797;fill-opacity:1;stroke:none;stroke-width:0.530024;stroke-dasharray:none;stroke-opacity:1\"\n     id=\"l1p4@cx_color\"\n     width=\"28.361715\"\n     height=\"16.830027\"\n     x=\"134.54309\"\n     y=\"63.044209\"\n     inkscape:label=\"l1p4@cx_color\" /></g>\n        <g\n   id=\"l2p4@cx_hide\"><rect\n     style=\"fill:#979797;fill-opacity:1;stroke:none;stroke-width:0.530024;stroke-dasharray:none;stroke-opacity:1\"\n     id=\"l2p4@cx_color\"\n     width=\"28.361715\"\n     height=\"16.830027\"\n     x=\"134.54309\"\n     y=\"38.5383\"\n     inkscape:label=\"l2p4@cx_color\" /></g>\n        <g\n   id=\"l3p4@cx_hide\"\n   inkscape:label=\"l3p4@cx_hide\"><rect\n     style=\"fill:#979797;fill-opacity:1;stroke:none;stroke-width:0.530024;stroke-dasharray:none;stroke-opacity:1\"\n     id=\"l3p4@cx_color\"\n     width=\"28.361715\"\n     height=\"16.830027\"\n     x=\"134.54309\"\n     y=\"14.020534\"\n     inkscape:label=\"l3p4@cx_color\" /></g>\n        <g\n   id=\"l1p5@cx_hide\"\n   inkscape:label=\"l1p5_cx_hide\"><rect\n     style=\"fill:#979797;fill-opacity:1;stroke:none;stroke-width:0.530024;stroke-dasharray:none;stroke-opacity:1\"\n     id=\"l1p5@cx_color\"\n     width=\"28.361715\"\n     height=\"16.830027\"\n     x=\"169.25758\"\n     y=\"63.256374\"\n     inkscape:label=\"l1p5_cx_color\" /></g>\n        <g\n   id=\"l2p5@cx_hide\"><rect\n     style=\"fill:#979797;fill-opacity:1;stroke:none;stroke-width:0.530024;stroke-dasharray:none;stroke-opacity:1\"\n     id=\"l2p5@cx_color\"\n     width=\"28.361715\"\n     height=\"16.830027\"\n     x=\"169.25758\"\n     y=\"38.750465\"\n     inkscape:label=\"l2p5@cx_color\" /></g>\n        <g\n   id=\"l3p5@cx_hide\"\n   inkscape:label=\"l3p5@cx_hide\"><rect\n     style=\"fill:#979797;fill-opacity:1;stroke:none;stroke-width:0.530024;stroke-dasharray:none;stroke-opacity:1\"\n     id=\"l3p5@cx_color\"\n     width=\"28.361715\"\n     height=\"16.830027\"\n     x=\"169.25758\"\n     y=\"14.2327\"\n     inkscape:label=\"l3p5@cx_color\" /></g>\n        <g\n   id=\"l1p6@cx_hide\"><rect\n     style=\"fill:#979797;fill-opacity:1;stroke:none;stroke-width:0.530024;stroke-dasharray:none;stroke-opacity:1\"\n     id=\"l1p6@cx_color\"\n     width=\"28.361715\"\n     height=\"16.830027\"\n     x=\"203.97209\"\n     y=\"62.922562\"\n     inkscape:label=\"l1p6@cx_color\" /></g>\n        <g\n   id=\"l2p6@cx_hide\"><rect\n     style=\"fill:#979797;fill-opacity:1;stroke:none;stroke-width:0.530024;stroke-dasharray:none;stroke-opacity:1\"\n     id=\"l2p6@cx_color\"\n     width=\"28.361715\"\n     height=\"16.830027\"\n     x=\"203.97209\"\n     y=\"38.416653\" /></g>\n        <g\n   id=\"l3p6@cx_hide\"\n   inkscape:label=\"l3p6_cx_hide\"><rect\n     style=\"fill:#979797;fill-opacity:1;stroke:none;stroke-width:0.530024;stroke-dasharray:none;stroke-opacity:1\"\n     id=\"l3p6@cx_color\"\n     width=\"28.361715\"\n     height=\"16.830027\"\n     x=\"203.97209\"\n     y=\"13.898885\" /></g>\n        <g\n   id=\"machine@cx_move\">\n\n            <ellipse\n   style=\"opacity:1;fill:#cecaca;fill-opacity:1;stroke:#000000;stroke-width:0.579841;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"path10\"\n   cx=\"134.3656\"\n   cy=\"237.05241\"\n   inkscape:label=\"poros\"\n   rx=\"12.579945\"\n   ry=\"12.539817\" />\n            <path\n   style=\"opacity:1;fill:#cecaca;fill-opacity:1;stroke:#000000;stroke-width:0.440278;stroke-dasharray:none;stroke-opacity:1\"\n   d=\"m 113.80835,212.52826 0.41647,24.33142 8.11103,8.74314 27.25287,0.0617 16.59864,-19.53591 -0.33828,-14.49469 z\"\n   id=\"mesin\"\n   inkscape:transform-center-x=\"-13.749872\"\n   inkscape:transform-center-y=\"7.9897772\" />\n\n\n\n\n            <g\n   id=\"silinder@cx_move\">\n                <g\n   id=\"holdworkpiece@cx_hide\"><circle\n     style=\"display:inline;fill:#979797;stroke-width:0.340492\"\n     id=\"holdworkpiece@cx_color\"\n     cx=\"57.900024\"\n     cy=\"204.24599\"\n     r=\"14.445869\"\n     inkscape:label=\"holdworkpiece@cx_color\" /></g>\n                <rect\n   style=\"fill:#cecaca;fill-opacity:1;stroke:#000000;stroke-width:0.482154;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"btgsilinder\"\n   width=\"62.96682\"\n   height=\"4.1962385\"\n   x=\"96.26741\"\n   y=\"205.5269\"\n   inkscape:transform-center-x=\"-3.1832489\"\n   inkscape:transform-center-y=\"-13.931668\"\n   transform=\"matrix(0.99997572,-0.00696999,0.00810844,0.99996712,0,0)\" />\n                <g\n   id=\"grip@cx_move\"\n   inkscape:label=\"grip@cx_move\">\n                    <path\n   style=\"opacity:1;fill:#cecaca;fill-opacity:1;stroke:#000000;stroke-width:0.498584;stroke-dasharray:none;stroke-opacity:1\"\n   d=\"m 57.412089,187.21018 4.698486,-0.98236 4.841173,2.06614 2.465807,4.57693 22.534677,9.60517 1.704561,-3.13215 -11.937034,-4.55047 0.552879,-1.78105 -20.370942,-9.19639 -6.011763,-0.53293 -0.982853,2.37983 z\"\n   id=\"gripr@cx_move\"\n   inkscape:transform-center-x=\"51.966046\"\n   inkscape:transform-center-y=\"-27.779877\"\n   inkscape:label=\"gripr@cx_move\" />\n                    <path\n   style=\"fill:#cecaca;fill-opacity:1;stroke:#000000;stroke-width:0.498584;stroke-dasharray:none;stroke-opacity:1\"\n   d=\"m 57.449749,221.83393 4.728198,0.82758 4.770731,-2.22396 2.314192,-4.65545 22.20715,-10.33992 1.806475,3.0745 -11.781173,4.93997 0.611049,1.76195 -20.057999,9.86029 -5.991037,0.73008 -1.060463,-2.34633 z\"\n   id=\"gripl@cx_move\"\n   inkscape:transform-center-x=\"52.111299\"\n   inkscape:transform-center-y=\"-5.0338676\"\n   inkscape:label=\"gripl@cx_move\" />\n                </g>\n                <rect\n   style=\"fill:#cecaca;fill-opacity:1;stroke:#000000;stroke-width:0.83465;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"grip\"\n   width=\"28.959419\"\n   height=\"16.040449\"\n   x=\"82.277489\"\n   y=\"197.32465\"\n   inkscape:transform-center-x=\"27.931422\"\n   inkscape:transform-center-y=\"-16.056595\"\n   transform=\"rotate(-0.43588215)\" />\n            </g>\n            <rect\n   style=\"opacity:1;fill:#cecaca;fill-opacity:1;stroke:#000000;stroke-width:0.622754;stroke-dasharray:none;stroke-opacity:1\"\n   id=\"silinder\"\n   width=\"52.750401\"\n   height=\"10.379384\"\n   x=\"111.60954\"\n   y=\"202.36696\"\n   inkscape:transform-center-x=\"-13.433818\"\n   inkscape:transform-center-y=\"-14.051978\"\n   transform=\"matrix(0.9999767,-0.00682846,0.00819186,0.99996646,0,0)\" />\n        </g>\n    <text\n   xml:space=\"preserve\"\n   id=\"text27\"\n   style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:53.3333px;font-family:'Segoe UI';-inkscape-font-specification:'Segoe UI';white-space:pre;shape-inside:url(#rect27);fill:#ffffff;fill-opacity:1;stroke-width:0.20063708;stroke-dasharray:none;stroke:#000000;stroke-opacity:1\"\n   transform=\"translate(-13.447989,-128.58283)\"><tspan\n     x=\"24.802734\"\n     y=\"231.99333\"\n     id=\"tspan4\"><tspan\n       style=\"font-size:16px\"\n       id=\"tspan3\">Level : </tspan></tspan></text><text\n   xml:space=\"preserve\"\n   style=\"font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:16.9873px;font-family:'Segoe UI';-inkscape-font-specification:'Segoe UI';fill:#ffffff;fill-opacity:1;stroke:#000000;stroke-width:0.20063708;stroke-dasharray:none;stroke-opacity:1\"\n   x=\"60.399006\"\n   y=\"103.6623\"\n   id=\"level@cx_status\"><tspan\n     sodipodi:role=\"line\"\n     id=\"tspan28\"\n     style=\"stroke-width:0.20063708;stroke:#000000;fill:#ffffff;fill-opacity:1;stroke-opacity:1;stroke-dasharray:none\"\n     x=\"62.399006\"\n     y=\"103.6623\">1</tspan></text></g>\n\n\n\n\n</svg>\n\n    <!-- SVG FILE CONTENT ABOVE -->\n\n    <script>\n        (function($scope) {\n            const cxMove = \"cx_move\";\n            const cxColor = \"cx_color\";\n            const cxStatus = \"cx_status\";\n            const cxHide = \"cx_hide\";\n            const cxStroke = \"cx_stroke\";\n            const maxStatusLength = 12;\n\n\n            $scope.checkSVG = function() {\n\n                if (!$scope.graphicObjects) {\n                    $scope.graphicObjects = [];\n                }\n                recursiveEach($(\"#graphics\"), $scope.graphicObjects);\n                // console.log($scope.graphicObjects);\n\n                function recursiveEach(element, container){\n                    element.children().each(function () {\n                        const $currentElement = $(this);\n                        if (this.id && this.id.indexOf('@') > 0) {\n                            container.push({\n                                id: this.id,\n                                element: $currentElement,\n                                cxMove: (this.id.indexOf(cxMove) > 0),\n                                cxColor: (this.id.indexOf(cxColor) > 0),\n                                cxStatus: (this.id.indexOf(cxStatus) > 0),\n                                cxHide: (this.id.indexOf(cxHide) > 0),\n                                cxStroke: (this.id.indexOf(cxStroke) > 0),\n                            });\n                        }\n                        recursiveEach($currentElement, container);\n                    });\n                }\n            };\n\n            $scope.$watch('msg', function() {\n                if (!$scope.msg) return;\n\n                if (Array.isArray($scope.msg.payload)) {\n                    for (let aReq of $scope.msg.payload) {\n                        animateObject(aReq.payload, aReq.topic);\n                    }\n                } else {\n                    animateObject($scope.msg.payload, $scope.msg.topic);\n                }\n            });\n\n            function animateObject(payload, topic) {\n\n                if (payload === undefined || payload === null ||\n                    !topic || typeof topic !== 'string' || !topic.includes('@')) return;\n\n                const id = topic.split('@')[0], cxType = topic.split('@')[1];\n\n                for (const graphicObject of $scope.graphicObjects) {\n                    const objId = graphicObject.id.split('@')[0];\n                    if (objId !== id || graphicObject.id.indexOf(cxType) === -1) continue;\n\n                    if (cxType === cxColor && graphicObject.cxColor && typeof payload === 'string') {\n\n                        graphicObject.element.css({fill : payload});\n\n                    } else if (cxType === cxStatus && graphicObject.cxStatus && typeof payload === 'string') {\n                        const statusText = (payload.length > maxStatusLength) ?\n                            payload.substring(0, maxStatusLength - 3) + '...' : payload;\n\n                        graphicObject.element.text(statusText);\n\n                    } else if (cxType === cxHide && graphicObject.cxHide && typeof payload === 'boolean') {\n                        const displayAttr = (payload)? 'none' : '';\n                        graphicObject.element.css({display: displayAttr})\n\n                    } else if (cxType === cxMove && graphicObject.cxMove) {\n                        // box = SVGRect {x: 51.95399475097656, y: 54.69599914550781, width: 94.41000366210938, height: 94.41000366210938}\n                        const box = graphicObject.element[0].getBBox();\n                        const matrix = getMatrix(payload, box);\n                        if (matrix) graphicObject.element.attr('transform', matrix);\n\n                    } else if (cxType === cxStroke && graphicObject.cxStroke) {\n                        // const displayAttr = (payload)? 'none' : '';\n                        if (payload.color != null) graphicObject.element.css({stroke: payload.color});\n                        if (payload.width != null) graphicObject.element.css({[\"stroke-width\"]: payload.width});\n                    }\n                }\n            }\n\n\n            function getMatrix(config, box) {\n                if (!config || !box) return;\n\n                // translation\n                const tx = config.x || 0;\n                const ty = config.y || 0;\n                // angle in radians\n                const rads = config.deg * (Math.PI / 180) || 0;\n                // rotation centre\n                // box = { x: 51.95399475097656, y: 54.69599914550781, width: 94.41000366210938, height: 94.41000366210938 }\n                const pivot_x = (config.pivot && config.pivot[0])? config.pivot[0] : 0;\n                const pivot_y = (config.pivot && config.pivot[1])? config.pivot[1] : 0;\n                const cx = box.x + box.width * ( (pivot_x)? pivot_x : 0.5 );\n                const cy = box.y + box.height * ( (pivot_y)? pivot_y : 0 );\n                // scaling\n                const sx = 1;\n                const sy = 1;\n\n                // matrix(0.594088, -0.516432, 0.62601, 0.720144, -223.586029, 145.949615)\n                return 'matrix(' +\n                    (sx * Math.cos(rads)) + ', ' + (sy * Math.sin(rads)) + ', ' +\n                    (-sx * Math.sin(rads)) + ', ' + (sy * Math.cos(rads)) + ', ' +\n                    ((-Math.cos(rads) * cx + Math.sin(rads) * cy + cx) * sx + tx) + ', ' +\n                    ((-Math.sin(rads) * cx - Math.cos(rads) * cy + cy) * sy + ty) + ')';\n            }\n\n        })(scope);\n    </script>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "tablestyle",
        "x": 1370,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "6355f4a4c200c7c2",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "a72686750235ef2c",
        "name": "Rotate",
        "func": "\nreturn {\n    payload: [\n        {\n            payload: {\n                \n                x: 0,\n                y: 0,\n                deg: msg.payload,\n                pivot: [0.68,0.5]\n            },\n            topic: msg.topic\n        }\n    ]\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 740,
        "wires": [
            [
                "ab7a0e094b59725e"
            ]
        ]
    },
    {
        "id": "765b1bceeb0d1231",
        "type": "ui_slider",
        "z": "d1258a138c1d9aca",
        "g": "a72686750235ef2c",
        "name": "",
        "label": "Servo",
        "tooltip": "",
        "group": "727df6176172cba7",
        "order": 26,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "machine@cx_move",
        "topicType": "str",
        "min": "-50",
        "max": "144",
        "step": 1,
        "className": "",
        "x": 890,
        "y": 740,
        "wires": [
            [
                "6355f4a4c200c7c2",
                "64f77d8e75d1d851"
            ]
        ]
    },
    {
        "id": "9cd9cad7b0f2fbfe",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1040,
        "y": 1120,
        "wires": [
            [
                "286706e8950c7eb7"
            ]
        ]
    },
    {
        "id": "286706e8950c7eb7",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "pos 6",
        "func": "const maxValue = 144;\nconst duration = 1000; // 2 seconds\nconst interval = duration / maxValue; // Time per increment\nlet currentValue = 0;\n\nconst incrementValue = () => {\n    currentValue++;\n    const msg = {\n        topic: \"machine@cx_move\",\n        payload: currentValue\n    };\n    node.send(msg);\n\n    if (currentValue >= maxValue) {\n        clearInterval(incrementInterval);\n    }\n};\n\nconst incrementInterval = setInterval(incrementValue, interval);\n\nreturn null; // Prevent further processing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1120,
        "wires": [
            [
                "978024dafaa278df"
            ]
        ]
    },
    {
        "id": "9376fcb531b70f63",
        "type": "link in",
        "z": "d1258a138c1d9aca",
        "name": "link in 15",
        "links": [
            "32e0c1a2972cf6c3",
            "ab7a0e094b59725e",
            "c3107cc2ab8d6f43",
            "e6c2a5b8d10729a4",
            "e4164f276c24a8ac",
            "c0e6cb77ebc5e8a4",
            "95964f1ae5637553",
            "aebb64573be8a404",
            "7a8ab9082613a195",
            "eb7e0b64c6bf9077",
            "166ce40c67aa53b1",
            "6473f1d95843b0e7",
            "27f5f23951bc5d21",
            "98e841bda1bc8fd3",
            "0939be7a1f606280",
            "ed93dee30e3578b5",
            "d6cb3890b24478de",
            "1af7bb270310af60",
            "63572de6a66b588f",
            "abe011ae8588522a",
            "33cd0df0fb6c2c5d",
            "312157667dbf9538",
            "9a6a281f64e219e6",
            "e8904f6e1a077a11",
            "fd82c375dc5fe141",
            "7dde6150a1cfbaa1",
            "eaa566795cf414fa",
            "d3fbb98dc8a0ee6e",
            "295217abcf5a8e97",
            "8c97912615623455",
            "1107684a96330335"
        ],
        "x": 1285,
        "y": 580,
        "wires": [
            [
                "7eceb39346e3365a"
            ]
        ]
    },
    {
        "id": "ab7a0e094b59725e",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "a72686750235ef2c",
        "name": "link out 11",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 1115,
        "y": 740,
        "wires": []
    },
    {
        "id": "a7bcd60733fbde92",
        "type": "ui_slider",
        "z": "d1258a138c1d9aca",
        "g": "e624532f94b38939",
        "name": "",
        "label": "Cylinder",
        "tooltip": "",
        "group": "727df6176172cba7",
        "order": 29,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "silinder@cx_move",
        "topicType": "str",
        "min": "0",
        "max": "-42",
        "step": 1,
        "className": "",
        "x": 2020,
        "y": 940,
        "wires": [
            [
                "ab033258bac3b213",
                "3c1afc1d33b16d3a",
                "77fd76c38ccf4db5"
            ]
        ]
    },
    {
        "id": "ab033258bac3b213",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "e624532f94b38939",
        "name": "Cylinder",
        "func": "\nreturn {\n    payload: [\n        {\n            payload: {\n                \n                x: msg.payload,\n                y: 0,\n                \n            },\n            topic: msg.topic\n        }\n    ]\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2160,
        "y": 940,
        "wires": [
            [
                "c3107cc2ab8d6f43"
            ]
        ]
    },
    {
        "id": "c3107cc2ab8d6f43",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "e624532f94b38939",
        "name": "link out 12",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 2275,
        "y": 940,
        "wires": []
    },
    {
        "id": "e6c2a5b8d10729a4",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "7b88dd142459488a",
        "name": "link out 13",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 1885,
        "y": 1780,
        "wires": []
    },
    {
        "id": "b2f268a119212e3a",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1040,
        "y": 1160,
        "wires": [
            [
                "c8d1c6af4617609c"
            ]
        ]
    },
    {
        "id": "c8d1c6af4617609c",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "pos 5",
        "func": "const maxValue = 125;\nconst duration = 1000; // 1 seconds\nconst interval = duration / maxValue; // Time per increment\nlet currentValue = 0;\n\nconst incrementValue = () => {\n    currentValue++;\n    const msg = {\n        topic: \"machine@cx_move\",\n        payload: currentValue\n    };\n    node.send(msg);\n\n    if (currentValue >= maxValue) {\n        clearInterval(incrementInterval);\n    }\n};\n\nconst incrementInterval = setInterval(incrementValue, interval);\n\nreturn null; // Prevent further processing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1160,
        "wires": [
            [
                "542c7ba64e8e1e87"
            ]
        ]
    },
    {
        "id": "788ba742b43e5892",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1040,
        "y": 1200,
        "wires": [
            [
                "44e5ef0a0efb34cd"
            ]
        ]
    },
    {
        "id": "44e5ef0a0efb34cd",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "pos 4",
        "func": "const maxValue = 103;\nconst duration = 1000; // 2 seconds\nconst interval = duration / maxValue; // Time per increment\nlet currentValue = 0;\n\nconst incrementValue = () => {\n    currentValue++;\n    const msg = {\n        topic: \"machine@cx_move\",\n        payload: currentValue\n    };\n    node.send(msg);\n\n    if (currentValue >= maxValue) {\n        clearInterval(incrementInterval);\n    }\n};\n\nconst incrementInterval = setInterval(incrementValue, interval);\n\nreturn null; // Prevent further processing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1200,
        "wires": [
            [
                "0b064ca22cf607fb"
            ]
        ]
    },
    {
        "id": "88b95fbf336c418d",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1040,
        "y": 1240,
        "wires": [
            [
                "73327eea294e6bdd"
            ]
        ]
    },
    {
        "id": "73327eea294e6bdd",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "pos 3",
        "func": "const maxValue = 83;\nconst duration = 2000; // 2 seconds\nconst interval = duration / maxValue; // Time per increment\nlet currentValue = 0;\n\nconst incrementValue = () => {\n    currentValue++;\n    const msg = {\n        topic: \"machine@cx_move\",\n        payload: currentValue\n    };\n    node.send(msg);\n\n    if (currentValue >= maxValue) {\n        clearInterval(incrementInterval);\n    }\n};\n\nconst incrementInterval = setInterval(incrementValue, interval);\n\nreturn null; // Prevent further processing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1240,
        "wires": [
            [
                "73a34fe489eeac30"
            ]
        ]
    },
    {
        "id": "b9003eda62a670ba",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1040,
        "y": 1280,
        "wires": [
            [
                "96cc15ec15d559bd"
            ]
        ]
    },
    {
        "id": "96cc15ec15d559bd",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "pos 2",
        "func": "const maxValue = 53;\nconst duration = 1000; // 2 seconds\nconst interval = duration / maxValue; // Time per increment\nlet currentValue = 0;\n\nconst incrementValue = () => {\n    currentValue++;\n    const msg = {\n        topic: \"machine@cx_move\",\n        payload: currentValue\n    };\n    node.send(msg);\n\n    if (currentValue >= maxValue) {\n        clearInterval(incrementInterval);\n    }\n};\n\nconst incrementInterval = setInterval(incrementValue, interval);\n\nreturn null; // Prevent further processing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1280,
        "wires": [
            [
                "509409410fe850b7"
            ]
        ]
    },
    {
        "id": "0f51037132232d8b",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1040,
        "y": 1320,
        "wires": [
            [
                "c980388ff65353c2"
            ]
        ]
    },
    {
        "id": "c980388ff65353c2",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "pos 1",
        "func": "const maxValue = 34;\nconst duration = 1000; // 2 seconds\nconst interval = duration / maxValue; // Time per increment\nlet currentValue = 0;\n\nconst incrementValue = () => {\n    currentValue++;\n    const msg = {\n        topic: \"machine@cx_move\",\n        payload: currentValue\n    };\n    node.send(msg);\n\n    if (currentValue >= maxValue) {\n        clearInterval(incrementInterval);\n    }\n};\n\nconst incrementInterval = setInterval(incrementValue, interval);\n\nreturn null; // Prevent further processing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1320,
        "wires": [
            [
                "1d88a108c4b1b554"
            ]
        ]
    },
    {
        "id": "e2c1ad1b7694f66e",
        "type": "link in",
        "z": "d1258a138c1d9aca",
        "g": "a72686750235ef2c",
        "name": "link in 16",
        "links": [
            "978024dafaa278df",
            "542c7ba64e8e1e87",
            "0b064ca22cf607fb",
            "73a34fe489eeac30",
            "509409410fe850b7",
            "1d88a108c4b1b554",
            "6153bdfd8f747160",
            "167f2a0ac6a05cba",
            "d3633c5e1a417542",
            "e59a7d105551221f",
            "4f66b3b09506b45f",
            "23b057707d08e6d0",
            "206f416a3dc24c34",
            "a14c7016f95b17f9",
            "f1a723ea93995931"
        ],
        "x": 785,
        "y": 740,
        "wires": [
            [
                "765b1bceeb0d1231"
            ]
        ]
    },
    {
        "id": "978024dafaa278df",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "link out 14",
        "mode": "link",
        "links": [
            "e2c1ad1b7694f66e"
        ],
        "x": 1295,
        "y": 1120,
        "wires": []
    },
    {
        "id": "542c7ba64e8e1e87",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "link out 15",
        "mode": "link",
        "links": [
            "e2c1ad1b7694f66e"
        ],
        "x": 1295,
        "y": 1160,
        "wires": []
    },
    {
        "id": "0b064ca22cf607fb",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "link out 16",
        "mode": "link",
        "links": [
            "e2c1ad1b7694f66e"
        ],
        "x": 1295,
        "y": 1200,
        "wires": []
    },
    {
        "id": "73a34fe489eeac30",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "link out 17",
        "mode": "link",
        "links": [
            "e2c1ad1b7694f66e"
        ],
        "x": 1295,
        "y": 1240,
        "wires": []
    },
    {
        "id": "509409410fe850b7",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "link out 18",
        "mode": "link",
        "links": [
            "e2c1ad1b7694f66e"
        ],
        "x": 1295,
        "y": 1280,
        "wires": []
    },
    {
        "id": "1d88a108c4b1b554",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "link out 19",
        "mode": "link",
        "links": [
            "e2c1ad1b7694f66e"
        ],
        "x": 1295,
        "y": 1320,
        "wires": []
    },
    {
        "id": "7d1827569c1c8aeb",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "144",
        "payloadType": "num",
        "x": 1030,
        "y": 1440,
        "wires": [
            [
                "6e60bea31563fd89"
            ]
        ]
    },
    {
        "id": "6e60bea31563fd89",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "pos 6",
        "func": "const maxValue = msg.payload || 144; // Use msg.payload or default to 144\nconst minValue = 0;\nconst duration = 1000; // 2 seconds\nconst interval = duration / maxValue; // Time per decrement\nlet currentValue = maxValue;\n\nconst decrementValue = () => {\n    currentValue--;\n    const msg = {\n        topic: \"machine@cx_move\",\n        payload: currentValue\n    };\n    node.send(msg);\n\n    if (currentValue <= minValue) {\n        clearInterval(decrementInterval);\n    }\n};\n\nconst decrementInterval = setInterval(decrementValue, interval);\n\nreturn null; // Prevent further processing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1440,
        "wires": [
            [
                "6153bdfd8f747160"
            ]
        ]
    },
    {
        "id": "6153bdfd8f747160",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "link out 20",
        "mode": "link",
        "links": [
            "e2c1ad1b7694f66e"
        ],
        "x": 1295,
        "y": 1440,
        "wires": []
    },
    {
        "id": "75e8d5989ad00bab",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "125",
        "payloadType": "num",
        "x": 1030,
        "y": 1480,
        "wires": [
            [
                "37324fb6a76b7440"
            ]
        ]
    },
    {
        "id": "37324fb6a76b7440",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "pos 5",
        "func": "const maxValue = msg.payload || 144; // Use msg.payload or default to 144\nconst minValue = 0;\nconst duration = 1000; // 2 seconds\nconst interval = duration / maxValue; // Time per decrement\nlet currentValue = maxValue;\n\nconst decrementValue = () => {\n    currentValue--;\n    const msg = {\n        topic: \"machine@cx_move\",\n        payload: currentValue\n    };\n    node.send(msg);\n\n    if (currentValue <= minValue) {\n        clearInterval(decrementInterval);\n    }\n};\n\nconst decrementInterval = setInterval(decrementValue, interval);\n\nreturn null; // Prevent further processing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1480,
        "wires": [
            [
                "167f2a0ac6a05cba"
            ]
        ]
    },
    {
        "id": "167f2a0ac6a05cba",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "link out 21",
        "mode": "link",
        "links": [
            "e2c1ad1b7694f66e"
        ],
        "x": 1295,
        "y": 1480,
        "wires": []
    },
    {
        "id": "7c1f641867f584ea",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "f8cf790c1655479e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1040,
        "y": 1040,
        "wires": [
            [
                "dcbefbe7bbef80d3"
            ]
        ]
    },
    {
        "id": "dcbefbe7bbef80d3",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "f8cf790c1655479e",
        "name": "cal",
        "func": "const minValue = -34;\nconst maxValue = 0;\nconst decrementDuration = 800; // 800ms\nconst incrementDuration = 800; // 800ms\nconst delayDuration = 200; // 200ms\nconst decrementInterval = decrementDuration / Math.abs(minValue); // Time per decrement\nconst incrementInterval = incrementDuration / Math.abs(minValue); // Time per increment\n\nlet currentValue = maxValue;\nlet sequenceActive = context.get('sequenceActive') || false;\n\n// Function to decrement value\nconst decrementValue = () => {\n    currentValue--;\n    const msg = {\n        topic: \"machine@cx_move\",\n        payload: currentValue\n    };\n    node.send(msg);\n\n    if (currentValue <= minValue) {\n        clearInterval(decrementTimer);\n        setTimeout(startIncrement, delayDuration);\n    }\n};\n\n// Function to increment value\nconst incrementValue = () => {\n    currentValue++;\n    const msg = {\n        topic: \"machine@cx_move\",\n        payload: currentValue\n    };\n    node.send(msg);\n\n    if (currentValue >= maxValue) {\n        clearInterval(incrementTimer);\n        resetState();\n    }\n};\n\n// Function to reset the state\nconst resetState = () => {\n    currentValue = maxValue; // Reset current value to maxValue\n    sequenceActive = false;\n    context.set('sequenceActive', sequenceActive); // Update the context\n};\n\n// Start decrement timer\nconst startDecrement = () => {\n    decrementTimer = setInterval(decrementValue, decrementInterval);\n};\n\n// Start increment timer\nconst startIncrement = () => {\n    incrementTimer = setInterval(incrementValue, incrementInterval);\n};\n\n// Main logic to check if sequence is active\nif (!sequenceActive) {\n    sequenceActive = true;\n    context.set('sequenceActive', sequenceActive); // Update the context\n    startDecrement();\n}\n\nreturn null; // Prevent further processing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 4,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1040,
        "wires": [
            [
                "d3633c5e1a417542"
            ]
        ]
    },
    {
        "id": "d3633c5e1a417542",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "f8cf790c1655479e",
        "name": "link out 22",
        "mode": "link",
        "links": [
            "e2c1ad1b7694f66e"
        ],
        "x": 1295,
        "y": 1040,
        "wires": []
    },
    {
        "id": "6333735174ce5d31",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "103",
        "payloadType": "num",
        "x": 1030,
        "y": 1520,
        "wires": [
            [
                "d86065ceec840331"
            ]
        ]
    },
    {
        "id": "d86065ceec840331",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "pos 4",
        "func": "const maxValue = msg.payload || 144; // Use msg.payload or default to 144\nconst minValue = 0;\nconst duration = 1000; // 2 seconds\nconst interval = duration / maxValue; // Time per decrement\nlet currentValue = maxValue;\n\nconst decrementValue = () => {\n    currentValue--;\n    const msg = {\n        topic: \"machine@cx_move\",\n        payload: currentValue\n    };\n    node.send(msg);\n\n    if (currentValue <= minValue) {\n        clearInterval(decrementInterval);\n    }\n};\n\nconst decrementInterval = setInterval(decrementValue, interval);\n\nreturn null; // Prevent further processing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1520,
        "wires": [
            [
                "e59a7d105551221f"
            ]
        ]
    },
    {
        "id": "e59a7d105551221f",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "link out 23",
        "mode": "link",
        "links": [
            "e2c1ad1b7694f66e"
        ],
        "x": 1295,
        "y": 1520,
        "wires": []
    },
    {
        "id": "ad1d334b1d2275b1",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "83",
        "payloadType": "num",
        "x": 1030,
        "y": 1560,
        "wires": [
            [
                "7f8670d616fb8fdb"
            ]
        ]
    },
    {
        "id": "7f8670d616fb8fdb",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "pos 3",
        "func": "const maxValue = msg.payload || 144; // Use msg.payload or default to 144\nconst minValue = 0;\nconst duration = 1000; // 2 seconds\nconst interval = duration / maxValue; // Time per decrement\nlet currentValue = maxValue;\n\nconst decrementValue = () => {\n    currentValue--;\n    const msg = {\n        topic: \"machine@cx_move\",\n        payload: currentValue\n    };\n    node.send(msg);\n\n    if (currentValue <= minValue) {\n        clearInterval(decrementInterval);\n    }\n};\n\nconst decrementInterval = setInterval(decrementValue, interval);\n\nreturn null; // Prevent further processing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1560,
        "wires": [
            [
                "4f66b3b09506b45f"
            ]
        ]
    },
    {
        "id": "4f66b3b09506b45f",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "link out 24",
        "mode": "link",
        "links": [
            "e2c1ad1b7694f66e"
        ],
        "x": 1295,
        "y": 1560,
        "wires": []
    },
    {
        "id": "1a57759c8f78a59e",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "53",
        "payloadType": "num",
        "x": 1030,
        "y": 1600,
        "wires": [
            [
                "cf1fb4015d0f2b06"
            ]
        ]
    },
    {
        "id": "cf1fb4015d0f2b06",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "pos 2",
        "func": "const maxValue = msg.payload || 144; // Use msg.payload or default to 144\nconst minValue = 0;\nconst duration = 1000; // 2 seconds\nconst interval = duration / maxValue; // Time per decrement\nlet currentValue = maxValue;\n\nconst decrementValue = () => {\n    currentValue--;\n    const msg = {\n        topic: \"machine@cx_move\",\n        payload: currentValue\n    };\n    node.send(msg);\n\n    if (currentValue <= minValue) {\n        clearInterval(decrementInterval);\n    }\n};\n\nconst decrementInterval = setInterval(decrementValue, interval);\n\nreturn null; // Prevent further processing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1600,
        "wires": [
            [
                "23b057707d08e6d0"
            ]
        ]
    },
    {
        "id": "23b057707d08e6d0",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "link out 25",
        "mode": "link",
        "links": [
            "e2c1ad1b7694f66e"
        ],
        "x": 1295,
        "y": 1600,
        "wires": []
    },
    {
        "id": "cb6ac16235092836",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "34",
        "payloadType": "num",
        "x": 1030,
        "y": 1640,
        "wires": [
            [
                "b306c436d8f39c9d"
            ]
        ]
    },
    {
        "id": "b306c436d8f39c9d",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "pos 1",
        "func": "const maxValue = msg.payload || 144; // Use msg.payload or default to 144\nconst minValue = 0;\nconst duration = 1000; // 2 seconds\nconst interval = duration / maxValue; // Time per decrement\nlet currentValue = maxValue;\n\nconst decrementValue = () => {\n    currentValue--;\n    const msg = {\n        topic: \"machine@cx_move\",\n        payload: currentValue\n    };\n    node.send(msg);\n\n    if (currentValue <= minValue) {\n        clearInterval(decrementInterval);\n    }\n};\n\nconst decrementInterval = setInterval(decrementValue, interval);\n\nreturn null; // Prevent further processing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1640,
        "wires": [
            [
                "206f416a3dc24c34"
            ]
        ]
    },
    {
        "id": "206f416a3dc24c34",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "link out 26",
        "mode": "link",
        "links": [
            "e2c1ad1b7694f66e"
        ],
        "x": 1295,
        "y": 1640,
        "wires": []
    },
    {
        "id": "a56d125a7ecaffd4",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1040,
        "y": 1360,
        "wires": [
            [
                "0f492fbea8605de5"
            ]
        ]
    },
    {
        "id": "0f492fbea8605de5",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "pos 0",
        "func": "const maxValue = 0;\nconst duration = 1000; // 2 seconds\nconst interval = duration / maxValue; // Time per increment\nlet currentValue = 0;\n\nconst incrementValue = () => {\n    currentValue++;\n    const msg = {\n        topic: \"machine@cx_move\",\n        payload: currentValue\n    };\n    node.send(msg);\n\n    if (currentValue >= maxValue) {\n        clearInterval(incrementInterval);\n    }\n};\n\nconst incrementInterval = setInterval(incrementValue, interval);\n\nreturn null; // Prevent further processing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1360,
        "wires": [
            [
                "a14c7016f95b17f9"
            ]
        ]
    },
    {
        "id": "a14c7016f95b17f9",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "753bdcfe95bad03c",
        "name": "link out 27",
        "mode": "link",
        "links": [
            "e2c1ad1b7694f66e"
        ],
        "x": 1295,
        "y": 1360,
        "wires": []
    },
    {
        "id": "3e4c8219a8c62e74",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "7b88dd142459488a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "#3E494D",
        "payloadType": "str",
        "x": 1600,
        "y": 1780,
        "wires": [
            [
                "010e1d4a37c2faad"
            ]
        ]
    },
    {
        "id": "010e1d4a37c2faad",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "7b88dd142459488a",
        "name": "holdwp color",
        "func": "\nreturn {\n    payload: [\n        {\n            payload: msg.payload,\n            topic: 'holdworkpiece@cx_color'\n        },\n        {\n            payload: msg.payload,\n            topic: 'workpiece@cx_color'\n        }\n    ]\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 1780,
        "wires": [
            [
                "e6c2a5b8d10729a4"
            ]
        ]
    },
    {
        "id": "db7cc778322dd02b",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "7b88dd142459488a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "silver",
        "payloadType": "str",
        "x": 1590,
        "y": 1820,
        "wires": [
            [
                "010e1d4a37c2faad"
            ]
        ]
    },
    {
        "id": "57ddb46be243855a",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "7b88dd142459488a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "red",
        "payloadType": "str",
        "x": 1590,
        "y": 1860,
        "wires": [
            [
                "010e1d4a37c2faad"
            ]
        ]
    },
    {
        "id": "961bea6de62e4858",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "7b88dd142459488a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "#ffffff00",
        "payloadType": "str",
        "x": 1590,
        "y": 1900,
        "wires": [
            [
                "010e1d4a37c2faad"
            ]
        ]
    },
    {
        "id": "d8f079eae49db3ea",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "1511e2ef7dd47ac2",
        "name": "gripl",
        "func": "\nreturn {\n    payload: [\n        {\n            payload: {\n                \n                x: 0,\n                y: 0,\n                deg: msg.payload,\n                pivot: [1,0]\n            },\n            topic: msg.topic\n        }\n    ]\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 1380,
        "wires": [
            [
                "95964f1ae5637553"
            ]
        ]
    },
    {
        "id": "3385436ed582e278",
        "type": "ui_slider",
        "z": "d1258a138c1d9aca",
        "g": "1511e2ef7dd47ac2",
        "name": "",
        "label": "gripl",
        "tooltip": "",
        "group": "727df6176172cba7",
        "order": 32,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "gripl@cx_move",
        "topicType": "str",
        "min": "0",
        "max": "6",
        "step": 1,
        "className": "",
        "x": 1910,
        "y": 1380,
        "wires": [
            [
                "d8f079eae49db3ea",
                "dbfec8c9f1e73fef"
            ]
        ]
    },
    {
        "id": "95964f1ae5637553",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "1511e2ef7dd47ac2",
        "name": "link out 30",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 2115,
        "y": 1380,
        "wires": []
    },
    {
        "id": "be5fd39a4195046b",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "1511e2ef7dd47ac2",
        "name": "gripr",
        "func": "\nreturn {\n    payload: [\n        {\n            payload: {\n                \n                x: 0,\n                y: 0,\n                deg: msg.payload,\n                pivot: [1,1]\n            },\n            topic: msg.topic\n        }\n    ]\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 1300,
        "wires": [
            [
                "aebb64573be8a404"
            ]
        ]
    },
    {
        "id": "6905fd314d8c9819",
        "type": "ui_slider",
        "z": "d1258a138c1d9aca",
        "g": "1511e2ef7dd47ac2",
        "name": "",
        "label": "gripr",
        "tooltip": "",
        "group": "727df6176172cba7",
        "order": 35,
        "width": 5,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "gripr@cx_move",
        "topicType": "str",
        "min": "0",
        "max": "-6",
        "step": 1,
        "className": "",
        "x": 1910,
        "y": 1300,
        "wires": [
            [
                "be5fd39a4195046b",
                "6641c356d4ac04af"
            ]
        ]
    },
    {
        "id": "aebb64573be8a404",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "1511e2ef7dd47ac2",
        "name": "link out 31",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 2115,
        "y": 1300,
        "wires": []
    },
    {
        "id": "e6d3505743a3dafb",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "24afd8564242d88d",
        "name": "Hide WP",
        "func": "const payloadColor = true;\n\nconst generateMessages = (prefix, group) => {\n    const messages = [];\n    for (let i = 1; i <= 6; i++) {\n        const topic = `${prefix}${group}p${i}@cx_hide`;\n        messages.push({\n            topic: topic,\n            payload: payloadColor\n        });\n    }\n    return messages;\n};\n\nconst generateSimpleMessages = (prefix) => {\n    const messages = [];\n    for (let i = 1; i <= 6; i++) {\n        const topic = `${prefix}${i}@cx_hide`;\n        messages.push({\n            topic: topic,\n            payload: payloadColor\n        });\n    }\n    return messages;\n};\n\nconst allMessages = [];\n\n// Generate messages for l1, l2, l3\nfor (let group = 1; group <= 3; group++) {\n    allMessages.push(...generateMessages('l', group));\n}\n\n// Generate messages for p1 to p6\nallMessages.push(...generateSimpleMessages('p'));\n\n// Add single messages for holdworkpiece and workpiece\nallMessages.push({\n    topic: \"holdworkpiece@cx_hide\",\n    payload: payloadColor\n});\n\nallMessages.push({\n    topic: \"workpiece@cx_hide\",\n    payload: payloadColor\n});\n\n// Send all messages\nallMessages.forEach(msg => node.send(msg));\n\nreturn null; // Prevent further processing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 500,
        "wires": [
            [
                "7a8ab9082613a195"
            ]
        ]
    },
    {
        "id": "b14fc22a1687023e",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "24afd8564242d88d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 820,
        "y": 500,
        "wires": [
            [
                "e6d3505743a3dafb"
            ]
        ]
    },
    {
        "id": "7a8ab9082613a195",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "24afd8564242d88d",
        "name": "link out 32",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 1075,
        "y": 500,
        "wires": []
    },
    {
        "id": "4f471a13d86a2806",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 620,
        "wires": [
            [
                "cd44ea67259596a4"
            ]
        ]
    },
    {
        "id": "307fecd4aa36f14f",
        "type": "ui_template",
        "z": "d1258a138c1d9aca",
        "group": "61376b9982037186",
        "name": "CSS Border",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<style>\n    .borderstyle {\n        border: 1px solid #ffffff;\n        /* White solid border with 1px width and 50% opacity */\n        border-radius: 8px;\n        /* Rounded corners with 8px radius */\n        padding: 10px;\n        /* Optional padding */\n        margin: 10px;\n        /* Optional margin */\n        color: black;\n        /* Text color */\n        font-weight: bold;\n        /* Bold text */\n        font-size: 18px;\n        /* Text size 18px */\n    }\n\n    .centerstyle {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        text-align: center;\n        height: 100%;\n        /* Ensure the element takes the full height of its container */\n    }\n\n    .tablestyle {\n        border: 1px solid #ffffff;\n        /* White solid border with 2px width */\n        border-radius: 8px;\n        /* Rounded corners with 1px radius */\n        padding: 10px;\n        /* Optional padding */\n        margin: 10px;\n        /* Optional margin */\n        color: black;\n        /* Text color */\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 1390,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "b522c07697ef0705",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "1511e2ef7dd47ac2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1620,
        "y": 1300,
        "wires": [
            [
                "1ba4a0f83b47b623"
            ]
        ]
    },
    {
        "id": "0927270dd7e4b6b2",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "1511e2ef7dd47ac2",
        "name": "grip off",
        "func": "// Initialize state variables if they don't exist\nif (typeof context.get('counter1') === 'undefined') {\n    context.set('counter1', -6);\n}\n\nif (typeof context.get('counter2') === 'undefined') {\n    context.set('counter2', 6);\n}\n\nif (typeof context.get('running') === 'undefined') {\n    context.set('running', false);\n}\n\n// Get state variables\nlet counter1 = context.get('counter1');\nlet counter2 = context.get('counter2');\nlet running = context.get('running');\n\n// Function to update counters\nfunction updateCounters() {\n    // Increment counter1 and decrement counter2\n    counter1++;\n    counter2--;\n\n    // Create messages\n    let msg1 = { payload: counter1 };\n    let msg2 = { payload: counter2 };\n\n    // Store updated counters\n    context.set('counter1', counter1);\n    context.set('counter2', counter2);\n\n    // Send messages\n    node.send([msg1, msg2]);\n\n    // Check if counters have reached their limits\n    if (counter1 >= 0 && counter2 <= 0) {\n        clearInterval(context.get('intervalId'));\n        context.set('running', false);\n\n        // Reset counters and running state to initial values\n        context.set('counter1', -6);\n        context.set('counter2', 6);\n    }\n}\n\n// Start updating counters if not already running\nif (!running) {\n    context.set('running', true);\n    context.set('counter1', -6);\n    context.set('counter2', 6);\n\n    // Set interval to update counters every 600ms\n    let intervalId = setInterval(updateCounters, 40);\n    context.set('intervalId', intervalId);\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1750,
        "y": 1380,
        "wires": [
            [
                "6905fd314d8c9819"
            ],
            [
                "3385436ed582e278"
            ]
        ]
    },
    {
        "id": "80852dd58a772a11",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "1511e2ef7dd47ac2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1620,
        "y": 1380,
        "wires": [
            [
                "0927270dd7e4b6b2"
            ]
        ]
    },
    {
        "id": "1ba4a0f83b47b623",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "1511e2ef7dd47ac2",
        "name": "grip on",
        "func": "// Initialize state variables if they don't exist\nif (typeof context.get('counter1') === 'undefined') {\n    context.set('counter1', 0);\n}\n\nif (typeof context.get('counter2') === 'undefined') {\n    context.set('counter2', 0);\n}\n\nif (typeof context.get('running') === 'undefined') {\n    context.set('running', false);\n}\n\n// Get state variables\nlet counter1 = context.get('counter1');\nlet counter2 = context.get('counter2');\nlet running = context.get('running');\n\n// Function to update counters\nfunction updateCounters() {\n    // Decrement counter1 and increment counter2\n    counter1--;\n    counter2++;\n\n    // Create messages\n    let msg1 = { payload: counter1 };\n    let msg2 = { payload: counter2 };\n\n    // Store updated counters\n    context.set('counter1', counter1);\n    context.set('counter2', counter2);\n\n    // Send messages\n    node.send([msg1, msg2]);\n\n    // Check if counters have reached their limits\n    if (counter1 <= -6 && counter2 >= 6) {\n        clearInterval(context.get('intervalId'));\n        context.set('running', false);\n\n        // Reset counters and running state to initial values\n        context.set('counter1', 0);\n        context.set('counter2', 0);\n    }\n}\n\n// Start updating counters if not already running\nif (!running) {\n    context.set('running', true);\n    context.set('counter1', 0);\n    context.set('counter2', 0);\n\n    // Set interval to update counters every 600ms\n    let intervalId = setInterval(updateCounters, 40);\n    context.set('intervalId', intervalId);\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1750,
        "y": 1300,
        "wires": [
            [
                "6905fd314d8c9819"
            ],
            [
                "3385436ed582e278"
            ]
        ]
    },
    {
        "id": "89712ad2c49adb76",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "e624532f94b38939",
        "name": "Cylinder On",
        "func": "// Initialize state variables if they don't exist\nif (typeof context.get('counter') === 'undefined') {\n    context.set('counter', 0);\n}\n\nif (typeof context.get('running') === 'undefined') {\n    context.set('running', false);\n}\n\n// Get state variables\nlet counter = context.get('counter');\nlet running = context.get('running');\n\n// Function to update counter\nfunction updateCounter() {\n    // Decrement counter\n    counter--;\n\n    // Create message\n    let msg = { payload: counter };\n\n    // Store updated counter\n    context.set('counter', counter);\n\n    // Send message\n    node.send(msg);\n\n    // Check if counter has reached its limit\n    if (counter <= -42) {\n        clearInterval(context.get('intervalId'));\n        context.set('running', false);\n\n        // Reset counter and running state to initial values\n        context.set('counter', 0);\n    }\n}\n\n// Start updating counter if not already running\nif (!running) {\n    context.set('running', true);\n    context.set('counter', 0);\n\n    // Set interval to update counter every 40ms\n    let intervalId = setInterval(updateCounter, 5);\n    context.set('intervalId', intervalId);\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 940,
        "wires": [
            [
                "a7bcd60733fbde92"
            ]
        ]
    },
    {
        "id": "334734ede2162faf",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "e624532f94b38939",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1600,
        "y": 940,
        "wires": [
            [
                "89712ad2c49adb76"
            ]
        ]
    },
    {
        "id": "f4a87e2bb3b18e8e",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 290,
        "y": 80,
        "wires": [
            [
                "a7bcd60733fbde92",
                "6905fd314d8c9819",
                "3385436ed582e278",
                "765b1bceeb0d1231",
                "5db5fe5abe326906",
                "b643126bd1aeaef7",
                "87ca13916f032e31"
            ]
        ]
    },
    {
        "id": "3c1afc1d33b16d3a",
        "type": "change",
        "z": "d1258a138c1d9aca",
        "g": "e624532f94b38939",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "cylinder_position",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2220,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "cae5c5af91c625c6",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "e624532f94b38939",
        "name": "Conditional set point Logic",
        "func": "// Initialize state variables if they don't exist\nif (typeof context.get('running') === 'undefined') {\n    context.set('running', false);\n}\n\n// Get state variables\nlet running = context.get('running');\n\n// Function to update cylinder position\nfunction updateCylinderPosition(targetPosition) {\n    // Read the current cylinder position from the global context\n    let currentPosition = global.get('cylinder_position') || 0;\n\n    // Determine the direction to move\n    let direction = currentPosition > targetPosition ? -1 : 1;\n\n    // Function to update the position\n    function updatePosition() {\n        currentPosition += direction;\n\n        // Update the global variable with the new position\n        global.set('cylinder_position', currentPosition);\n\n        // Create and send a message with the new position\n        let msg = { payload: currentPosition };\n        node.send(msg);\n\n        // Check if the target position has been reached\n        if ((direction === -1 && currentPosition <= targetPosition) ||\n            (direction === 1 && currentPosition >= targetPosition)) {\n            clearInterval(context.get('intervalId'));\n            context.set('running', false);\n        }\n    }\n\n    // Set interval to update position every 40ms if not already running\n    if (!running) {\n        context.set('running', true);\n        let intervalId = setInterval(updatePosition, 6);\n        context.set('intervalId', intervalId);\n    }\n}\n\n// Start updating cylinder position if not already running\nif (!running) {\n    // Retrieve the target position from the input message payload\n    let targetPosition = msg.payload;\n\n    // Start updating the cylinder position to the target position\n    updateCylinderPosition(targetPosition);\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1820,
        "y": 980,
        "wires": [
            [
                "a7bcd60733fbde92"
            ]
        ]
    },
    {
        "id": "340ee3ccaa0f2d69",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "a6734c00bf0e0f0d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-41",
        "payloadType": "num",
        "x": 1570,
        "y": 1100,
        "wires": [
            [
                "80fa362a3942e24d"
            ]
        ]
    },
    {
        "id": "267f33c8ef19735a",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "a6734c00bf0e0f0d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 1570,
        "y": 1140,
        "wires": [
            [
                "5a05a13cf467a2a4"
            ]
        ]
    },
    {
        "id": "1d35681336b5f85a",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "a6734c00bf0e0f0d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "100",
        "payloadType": "num",
        "x": 1570,
        "y": 1180,
        "wires": [
            [
                "be6a419e718a8dc9"
            ]
        ]
    },
    {
        "id": "77fd76c38ccf4db5",
        "type": "debug",
        "z": "d1258a138c1d9aca",
        "g": "e624532f94b38939",
        "name": "debug 47",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2160,
        "y": 980,
        "wires": []
    },
    {
        "id": "6641c356d4ac04af",
        "type": "change",
        "z": "d1258a138c1d9aca",
        "g": "1511e2ef7dd47ac2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gripr_position",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2090,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "dbfec8c9f1e73fef",
        "type": "change",
        "z": "d1258a138c1d9aca",
        "g": "1511e2ef7dd47ac2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gripl_position",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2090,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "5590bbca09a69115",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "29483d6a89593dc3",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.05",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1630,
        "y": 1460,
        "wires": [
            [
                "e6a72356b3ae8e8c"
            ]
        ]
    },
    {
        "id": "e6a72356b3ae8e8c",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "29483d6a89593dc3",
        "name": "Read Gripper if gripper_on",
        "func": "// Function to check the positions and set the gripper_on variable\nfunction checkAndSetGripper() {\n    // Read the positions from the global context\n    let griprPosition = global.get('gripr_position');\n    let griplPosition = global.get('gripl_position');\n\n    // Check if the positions meet the specified conditions\n    if (griprPosition === -6 && griplPosition === 6) {\n        // Set the gripper_on variable to true\n        global.set('gripper_on', true);\n    } else {\n        // Set the gripper_on variable to false\n        global.set('gripper_on', false);\n    }\n}\n\n// Call the function to check and set the gripper_on variable\ncheckAndSetGripper();\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 1460,
        "wires": [
            []
        ]
    },
    {
        "id": "1ff0af55431009ee",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "c8250f5d05a71c0b",
        "name": "holdwp hidden",
        "func": "return {\n    payload: msg.payload,\n    topic: 'holdworkpiece@cx_hide'\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 380,
        "wires": [
            [
                "d6cb3890b24478de"
            ]
        ]
    },
    {
        "id": "46d4442e1543816d",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "c8250f5d05a71c0b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 810,
        "y": 360,
        "wires": [
            [
                "1ff0af55431009ee"
            ]
        ]
    },
    {
        "id": "7c4c00c9f1e27929",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "c8250f5d05a71c0b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 810,
        "y": 400,
        "wires": [
            [
                "1ff0af55431009ee"
            ]
        ]
    },
    {
        "id": "6473f1d95843b0e7",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "e9d28f35840dbe47",
        "name": "link out 34",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 985,
        "y": 200,
        "wires": []
    },
    {
        "id": "e79499eb652b3c0c",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "e9d28f35840dbe47",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "level@cx_status",
        "payload": "3",
        "payloadType": "str",
        "x": 850,
        "y": 200,
        "wires": [
            [
                "6473f1d95843b0e7"
            ]
        ]
    },
    {
        "id": "98e841bda1bc8fd3",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "e9d28f35840dbe47",
        "name": "link out 35",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 985,
        "y": 240,
        "wires": []
    },
    {
        "id": "774dcb4bd3447e23",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "e9d28f35840dbe47",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "level@cx_status",
        "payload": "2",
        "payloadType": "str",
        "x": 850,
        "y": 240,
        "wires": [
            [
                "98e841bda1bc8fd3"
            ]
        ]
    },
    {
        "id": "0939be7a1f606280",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "e9d28f35840dbe47",
        "name": "link out 36",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 985,
        "y": 280,
        "wires": []
    },
    {
        "id": "28a01b292bab863a",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "e9d28f35840dbe47",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "level@cx_status",
        "payload": "1",
        "payloadType": "str",
        "x": 850,
        "y": 280,
        "wires": [
            [
                "0939be7a1f606280"
            ]
        ]
    },
    {
        "id": "ed93dee30e3578b5",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "1330e5b198b13967",
        "name": "link out 37",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 2005,
        "y": 1560,
        "wires": []
    },
    {
        "id": "7a604deea4bc85df",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "1330e5b198b13967",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1630,
        "y": 1560,
        "wires": [
            [
                "98dccc0d7954e490"
            ]
        ]
    },
    {
        "id": "98dccc0d7954e490",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "1330e5b198b13967",
        "name": "Auto Show Holdworkpiece",
        "func": "// Function to check the gripper_on and Storing_Manual variables and send the appropriate message\nfunction checkGripperAndStoring() {\n    // Read the variables from the global context\n    let gripperOn = global.get('gripper_on');\n    let storingManual = global.get('Storing_Manual');\n\n    // Check the conditions and send the appropriate messages\n    if (gripperOn === true && storingManual === false) {\n        return [\n            {\n                payload: false,\n                topic: 'holdworkpiece@cx_hide'\n            },\n            {\n                payload: '#ffffff00',\n                topic: 'workpiece@cx_color'\n            }\n        ];\n    } else if (gripperOn === false && storingManual === false) {\n        return [\n            {\n                payload: true,\n                topic: 'holdworkpiece@cx_hide'\n            }\n        ];\n    }\n}\n\n// Call the function to check and send the message\nlet msgs = checkGripperAndStoring();\nif (msgs) {\n    for (let msg of msgs) {\n        node.send(msg);\n    }\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1830,
        "y": 1560,
        "wires": [
            [
                "ed93dee30e3578b5"
            ]
        ]
    },
    {
        "id": "b1162d2d2ce002db",
        "type": "change",
        "z": "d1258a138c1d9aca",
        "g": "ae885b8654c17c1a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Storing_Manual",
                "pt": "global",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 1660,
        "wires": [
            []
        ]
    },
    {
        "id": "217e46dda1beb004",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "ae885b8654c17c1a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1630,
        "y": 1660,
        "wires": [
            [
                "b1162d2d2ce002db"
            ]
        ]
    },
    {
        "id": "d6cb3890b24478de",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "c8250f5d05a71c0b",
        "name": "link out 38",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 1105,
        "y": 380,
        "wires": []
    },
    {
        "id": "f336ecb6977be0e0",
        "type": "ui_template",
        "z": "d1258a138c1d9aca",
        "group": "61376b9982037186",
        "name": "CSS",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<style>\n    /*Main background*/\n    body {\n        background: -webkit-linear-gradient(55deg,\n                #414142 0%,\n                #245aa5 100%);\n    }\n\n    .md-select-menu-container {\n        background-color: rgba(112, 123, 134, 0.8);\n    }\n\n\n    /*Top bar*/\n    body.nr-dashboard-theme md-toolbar,\n    body.nr-dashboard-theme md-content md-card {\n        background-color: transparent !important;\n        color: #FFFFFF !important;\n    }\n\n\n    /*Left menu*/\n    /*Sidebar*/\n    body.nr-dashboard-theme md-sidenav {\n        color: white !important;\n        background-color: rgba(0, 0, 0, 0) !important;\n    }\n\n    /*Hover selection*/\n    a.md-no-style,\n    button.md-no-style {\n        border-radius: 10px !important;\n    }\n\n    /*Selected*/\n    .nr-menu-item-active div button {\n        border-right: 4px solid rgb(41 98 255) !important;\n    }\n\n    /*List*/\n    body.nr-dashboard-theme md-sidenav div.md-list-item-inner {\n        color: white !important;\n        background-color: rgba(40, 85, 165, 1) !important;\n        border-radius: 10px !important;\n    }\n\n\n    /*Groups*/\n    ui-card-panel {\n        background-color: rgba(255, 255, 255, 0.1) !important;\n        border-radius: 10px !important;\n    }\n\n    .nr-dashboard-theme ui-card-panel {\n        border: none !important;\n    }\n\n    /*Name groups*/\n    .nr-dashboard-theme ui-card-panel p.nr-dashboard-cardtitle {\n        color: rgba(255, 255, 255, 0.9) !important;\n        font-weight: bold !important;\n        font-size: 22px;\n    }\n\n\n    /*Bouttons*/\n    .nr-dashboard-theme .nr-dashboard-button .md-button {\n        background-color: rgba(255, 255, 255, .1) !important;\n    }\n\n    .md-button {\n        border-radius: 10px !important;\n    }\n\n\n    /*Dropdown menu*/\n    .nr-dashboard-theme md-select-menu {\n        background-color: rgba(40, 85, 165, 1) !important;\n    }\n\n    .nr-dashboard-theme md-select-menu,\n    .nr-dashboard-theme md-select-menu md-option {\n        background-color: transparent !important;\n    }\n\n    .nr-dashboard-theme .md-select-menu-container {\n        border-radius: 10px !important;\n        border: none !important;\n    }\n\n    .nr-dashboard-theme md-select-menu md-option[selected] {\n        color: white !important;\n        background-color: #1a3566 !important;\n    }\n\n    /*Template*/\n    md-card>img,\n    md-card>md-card-header img,\n    md-card md-card-title-media img {\n        border-radius: 10px !important;\n    }\n\n    /* Color picker text BG */\n    .nr-dashboard-theme .color-picker-input-wrapper>input {\n        color: white !important;\n        background-color: transparent !important;\n    }\n</style>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "global",
        "className": "",
        "x": 1370,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "64f77d8e75d1d851",
        "type": "change",
        "z": "d1258a138c1d9aca",
        "g": "a72686750235ef2c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "servo_position",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "363199e333b3f028",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "Conditional Set Point Servo",
        "func": "// Initialize state variables if they don't exist\nif (typeof context.get('running') === 'undefined') {\n    context.set('running', false);\n}\n\n// Get state variables\nlet running = context.get('running');\n\n// Function to update servo position\nfunction updateServoPosition(targetPosition) {\n    // Read the current servo position from the global context\n    let currentPosition = global.get('servo_position') || 0;\n\n    // Determine the direction to move\n    let direction = currentPosition > targetPosition ? -1 : 1;\n\n    // Function to update the position\n    function updatePosition() {\n        currentPosition += direction;\n\n        // Update the global variable with the new position\n        global.set('servo_position', currentPosition);\n\n        // Create and send a message with the new position\n        let msg = { payload: currentPosition };\n        node.send(msg);\n\n        // Check if the target position has been reached\n        if ((direction === -1 && currentPosition <= targetPosition) ||\n            (direction === 1 && currentPosition >= targetPosition)) {\n            clearInterval(context.get('intervalId'));\n            context.set('running', false);\n        }\n    }\n\n    // Set interval to update position every 6ms if not already running\n    if (!running) {\n        context.set('running', true);\n        let intervalId = setInterval(updatePosition, 6);\n        context.set('intervalId', intervalId);\n    }\n}\n\n// Start updating servo position if not already running\nif (!running) {\n    // Retrieve the target position from the input message payload\n    let targetPosition = msg.payload;\n\n    // Start updating the servo position to the target position\n    updateServoPosition(targetPosition);\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1020,
        "wires": [
            [
                "f1a723ea93995931"
            ]
        ]
    },
    {
        "id": "f321dcab23cb149a",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-34",
        "payloadType": "num",
        "x": 370,
        "y": 1340,
        "wires": [
            [
                "a81bd65182eb57fa"
            ]
        ]
    },
    {
        "id": "1b6bf7781ca27473",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "138",
        "payloadType": "num",
        "x": 370,
        "y": 1020,
        "wires": [
            [
                "d9b8512bd6cf977e"
            ]
        ]
    },
    {
        "id": "95677cebb9038517",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 370,
        "y": 1300,
        "wires": [
            [
                "856e50a79488239e"
            ]
        ]
    },
    {
        "id": "f1a723ea93995931",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "link out 40",
        "mode": "link",
        "links": [
            "e2c1ad1b7694f66e"
        ],
        "x": 845,
        "y": 1020,
        "wires": []
    },
    {
        "id": "5994370d030e9397",
        "type": "link in",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "link in 17",
        "links": [
            "d9b8512bd6cf977e",
            "856e50a79488239e",
            "a81bd65182eb57fa",
            "33a67384ab089597",
            "7a32afd957eec1b5",
            "1cc13e9e1d7966d9",
            "5567807427c15d35",
            "fc50e90573f2108c",
            "e933e9a0e316481c",
            "e0c2dd9114fdabf0"
        ],
        "x": 525,
        "y": 1020,
        "wires": [
            [
                "363199e333b3f028"
            ]
        ]
    },
    {
        "id": "d9b8512bd6cf977e",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "link out 41",
        "mode": "link",
        "links": [
            "5994370d030e9397"
        ],
        "x": 455,
        "y": 1020,
        "wires": []
    },
    {
        "id": "856e50a79488239e",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "link out 42",
        "mode": "link",
        "links": [
            "5994370d030e9397"
        ],
        "x": 455,
        "y": 1300,
        "wires": []
    },
    {
        "id": "a81bd65182eb57fa",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "link out 43",
        "mode": "link",
        "links": [
            "5994370d030e9397"
        ],
        "x": 455,
        "y": 1340,
        "wires": []
    },
    {
        "id": "b1d29dabd28650f0",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "f13148c2ed906aae",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1730,
        "y": 580,
        "wires": [
            [
                "b43135a64608ee8e"
            ]
        ]
    },
    {
        "id": "b43135a64608ee8e",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "f13148c2ed906aae",
        "name": "level1 color",
        "func": "const isOn = msg.payload === true;\n\nreturn {\n    payload: [\n        {\n            payload: (isOn)? '#ADE5B0' : '#cecaca',\n            topic: 'level1@cx_color'\n        },{\n            payload: '1',\n            topic: 'level@cx_status'\n        }\n    ]\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 580,
        "wires": [
            [
                "63572de6a66b588f"
            ]
        ]
    },
    {
        "id": "5ba6af4dfa799fd8",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "f13148c2ed906aae",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 1730,
        "y": 620,
        "wires": [
            [
                "b43135a64608ee8e"
            ]
        ]
    },
    {
        "id": "63572de6a66b588f",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "f13148c2ed906aae",
        "name": "link out 44",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 2025,
        "y": 580,
        "wires": []
    },
    {
        "id": "9078b014beae7309",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "f13148c2ed906aae",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1730,
        "y": 660,
        "wires": [
            [
                "14b6716ce15cb47a"
            ]
        ]
    },
    {
        "id": "14b6716ce15cb47a",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "f13148c2ed906aae",
        "name": "level2 color",
        "func": "const isOn = msg.payload === true;\n\nreturn {\n    payload: [\n        {\n            payload: (isOn)? '#ADE5B0' : '#cecaca',\n            topic: 'level2@cx_color'\n        },{\n            payload: '2',\n            topic: 'level@cx_status'\n        }\n    ]\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 660,
        "wires": [
            [
                "abe011ae8588522a"
            ]
        ]
    },
    {
        "id": "1f9bbb804ca21485",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "f13148c2ed906aae",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 1730,
        "y": 700,
        "wires": [
            [
                "14b6716ce15cb47a"
            ]
        ]
    },
    {
        "id": "abe011ae8588522a",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "f13148c2ed906aae",
        "name": "link out 45",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 2025,
        "y": 660,
        "wires": []
    },
    {
        "id": "3206180f3a640dd3",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "f13148c2ed906aae",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "true",
        "payloadType": "bool",
        "x": 1730,
        "y": 740,
        "wires": [
            [
                "feb60fb7caf43d1c"
            ]
        ]
    },
    {
        "id": "feb60fb7caf43d1c",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "f13148c2ed906aae",
        "name": "level3 color",
        "func": "const isOn = msg.payload === true;\n\nreturn {\n    payload: [\n        {\n            payload: (isOn)? '#ADE5B0' : '#cecaca',\n            topic: 'level3@cx_color'\n        },{\n            payload: '3',\n            topic: 'level@cx_status'\n        }\n    ]\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1910,
        "y": 740,
        "wires": [
            [
                "33cd0df0fb6c2c5d"
            ]
        ]
    },
    {
        "id": "a3baefea126cf618",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "f13148c2ed906aae",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "false",
        "payloadType": "bool",
        "x": 1730,
        "y": 780,
        "wires": [
            [
                "feb60fb7caf43d1c"
            ]
        ]
    },
    {
        "id": "33cd0df0fb6c2c5d",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "f13148c2ed906aae",
        "name": "link out 46",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 2025,
        "y": 740,
        "wires": []
    },
    {
        "id": "697086cb993ce7f5",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "1ea5fb25c5a8d949",
        "name": "Level Color Logic based on Level_Target Data",
        "func": "// Read the level_target value from the global context\nlet levelTarget = global.get('level_target');\n\n// Function to generate the payload based on the level\nfunction generatePayload(level) {\n    let payloads = [];\n    \n    // Define colors\n    const activeColor = '#ADE5B0';\n    const inactiveColor = '#cecaca';\n    \n    // Generate payloads based on the level\n    if (level === 0) {\n        payloads = [\n            { payload: inactiveColor, topic: 'level1@cx_color' },\n            { payload: inactiveColor, topic: 'level2@cx_color' },\n            { payload: inactiveColor, topic: 'level3@cx_color' }\n        ];\n    } else if (level === 1) {\n        payloads = [\n            { payload: activeColor, topic: 'level1@cx_color' },\n            { payload: '1', topic: 'level@cx_status' },\n            { payload: inactiveColor, topic: 'level2@cx_color' },\n            { payload: inactiveColor, topic: 'level3@cx_color' }\n        ];\n    } else if (level === 2) {\n        payloads = [\n            { payload: inactiveColor, topic: 'level1@cx_color' },\n            { payload: activeColor, topic: 'level2@cx_color' },\n            { payload: '2', topic: 'level@cx_status' },\n            { payload: inactiveColor, topic: 'level3@cx_color' }\n        ];\n    } else if (level === 3) {\n        payloads = [\n            { payload: inactiveColor, topic: 'level1@cx_color' },\n            { payload: inactiveColor, topic: 'level2@cx_color' },\n            { payload: activeColor, topic: 'level3@cx_color' },\n            { payload: '3', topic: 'level@cx_status' }\n        ];\n    }\n\n    return payloads;\n}\n\n// Generate the payload based on the level_target value\nlet payloads = generatePayload(levelTarget);\n\n// Send each payload\nfor (let i = 0; i < payloads.length; i++) {\n    node.send(payloads[i]);\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1900,
        "y": 500,
        "wires": [
            [
                "312157667dbf9538"
            ]
        ]
    },
    {
        "id": "6001ac516fce6355",
        "type": "change",
        "z": "d1258a138c1d9aca",
        "g": "65c21d79a525975c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "level_target",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1820,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "b5e0d741a5dba7e7",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "1626dfd5a07d0839",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 1610,
        "y": 340,
        "wires": [
            [
                "6001ac516fce6355"
            ]
        ]
    },
    {
        "id": "312157667dbf9538",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "1ea5fb25c5a8d949",
        "name": "link out 47",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 2125,
        "y": 500,
        "wires": []
    },
    {
        "id": "80b2f1bab0225da8",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "1ea5fb25c5a8d949",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.05",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1610,
        "y": 500,
        "wires": [
            [
                "697086cb993ce7f5"
            ]
        ]
    },
    {
        "id": "ebf2c882d01e711e",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "1626dfd5a07d0839",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 1610,
        "y": 380,
        "wires": [
            [
                "6001ac516fce6355"
            ]
        ]
    },
    {
        "id": "cc69f402262ab88e",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "1626dfd5a07d0839",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3",
        "payloadType": "num",
        "x": 1610,
        "y": 420,
        "wires": [
            [
                "6001ac516fce6355"
            ]
        ]
    },
    {
        "id": "2f6f7a03df07875e",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "1626dfd5a07d0839",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 1610,
        "y": 300,
        "wires": [
            [
                "6001ac516fce6355"
            ]
        ]
    },
    {
        "id": "45ae3b1474fabd20",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "24afd8564242d88d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 820,
        "y": 540,
        "wires": [
            [
                "cd33161930c5ce83"
            ]
        ]
    },
    {
        "id": "eb7e0b64c6bf9077",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "24afd8564242d88d",
        "name": "link out 33",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 1075,
        "y": 540,
        "wires": []
    },
    {
        "id": "cd33161930c5ce83",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "24afd8564242d88d",
        "name": "Show WP",
        "func": "const payloadColor = false;\n\nconst generateMessages = (prefix, group) => {\n    const messages = [];\n    for (let i = 1; i <= 6; i++) {\n        const topic = `${prefix}${group}p${i}@cx_hide`;\n        messages.push({\n            topic: topic,\n            payload: payloadColor\n        });\n    }\n    return messages;\n};\n\nconst generateSimpleMessages = (prefix) => {\n    const messages = [];\n    for (let i = 1; i <= 6; i++) {\n        const topic = `${prefix}${i}@cx_hide`;\n        messages.push({\n            topic: topic,\n            payload: payloadColor\n        });\n    }\n    return messages;\n};\n\nconst allMessages = [];\n\n// Generate messages for l1, l2, l3\nfor (let group = 1; group <= 3; group++) {\n    allMessages.push(...generateMessages('l', group));\n}\n\n// Generate messages for p1 to p6\nallMessages.push(...generateSimpleMessages('p'));\n\n// Add single messages for holdworkpiece and workpiece\nallMessages.push({\n    topic: \"holdworkpiece@cx_hide\",\n    payload: payloadColor\n});\n\nallMessages.push({\n    topic: \"workpiece@cx_hide\",\n    payload: payloadColor\n});\n\n// Send all messages\nallMessages.forEach(msg => node.send(msg));\n\nreturn null; // Prevent further processing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 540,
        "wires": [
            [
                "1af7bb270310af60"
            ]
        ]
    },
    {
        "id": "1af7bb270310af60",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "24afd8564242d88d",
        "name": "link out 39",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 1075,
        "y": 540,
        "wires": []
    },
    {
        "id": "cd44ea67259596a4",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "name": "Reset Shelf Color",
        "func": "const payloadColor = \"grey\";\n\nconst generateMessages = (prefix, group) => {\n    const messages = [];\n    for (let i = 1; i <= 6; i++) {\n        const topic = `${prefix}${group}p${i}@cx_color`;\n        messages.push({\n            topic: topic,\n            payload: payloadColor\n        });\n    }\n    return messages;\n};\n\nconst allMessages = [];\n\n// Generate messages for l1, l2, l3\nfor (let group = 1; group <= 3; group++) {\n    allMessages.push(...generateMessages('l', group));\n}\n\n// Send all messages\nallMessages.forEach(msg => node.send(msg));\n\nreturn null; // Prevent further processing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 620,
        "wires": [
            [
                "7dde6150a1cfbaa1"
            ]
        ]
    },
    {
        "id": "35757471d483dddf",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.3",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 810,
        "y": 600,
        "wires": [
            [
                "ed09b0062395f6c3"
            ]
        ]
    },
    {
        "id": "ed09b0062395f6c3",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "name": "holdwp color",
        "func": "\nreturn {\n    payload: [\n        {\n            payload: msg.payload,\n            topic: 'holdworkpiece@cx_color'\n        },\n        {\n            payload: msg.payload,\n            topic: 'workpiece@cx_color'\n        }\n    ]\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 600,
        "wires": [
            [
                "e8904f6e1a077a11"
            ]
        ]
    },
    {
        "id": "e8904f6e1a077a11",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "name": "link out 48",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 1075,
        "y": 600,
        "wires": []
    },
    {
        "id": "a393b7506c0a9984",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 540,
        "wires": [
            [
                "b643126bd1aeaef7"
            ]
        ]
    },
    {
        "id": "b643126bd1aeaef7",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "name": "Hide using transparent WP",
        "func": "const payloadColor = '#ffffff00';\n\nconst generateMessages = (prefix, group) => {\n    const messages = [];\n    for (let i = 1; i <= 6; i++) {\n        const topic = `${prefix}${group}p${i}@cx_color`;\n        messages.push({\n            topic: topic,\n            payload: payloadColor\n        });\n    }\n    return messages;\n};\n\nconst generateSimpleMessages = (prefix) => {\n    const messages = [];\n    for (let i = 1; i <= 6; i++) {\n        const topic = `${prefix}${i}@cx_color`;\n        messages.push({\n            topic: topic,\n            payload: payloadColor\n        });\n    }\n    return messages;\n};\n\nconst allMessages = [];\n\n// Generate messages for l1, l2, l3\nfor (let group = 1; group <= 3; group++) {\n    allMessages.push(...generateMessages('l', group));\n}\n\n// Generate messages for p1 to p6\nallMessages.push(...generateSimpleMessages('p'));\n\n// Add single messages for holdworkpiece and workpiece\nallMessages.push({\n    topic: \"holdworkpiece@cx_color\",\n    payload: payloadColor\n});\n\nallMessages.push({\n    topic: \"workpiece@cx_color\",\n    payload: payloadColor\n});\n\n// Send all messages\nallMessages.forEach(msg => node.send(msg));\n\nreturn null; // Prevent further processing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 540,
        "wires": [
            [
                "fd82c375dc5fe141"
            ]
        ]
    },
    {
        "id": "fd82c375dc5fe141",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "name": "link out 49",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 645,
        "y": 540,
        "wires": []
    },
    {
        "id": "7dde6150a1cfbaa1",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "name": "link out 50",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 585,
        "y": 620,
        "wires": []
    },
    {
        "id": "e84767853f45e686",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 580,
        "wires": [
            [
                "b821452ff61b6996"
            ]
        ]
    },
    {
        "id": "b821452ff61b6996",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "name": "Change All Color to grey",
        "func": "const payloadColor = 'grey';\n\nconst generateMessages = (prefix, group) => {\n    const messages = [];\n    for (let i = 1; i <= 6; i++) {\n        const topic = `${prefix}${group}p${i}@cx_color`;\n        messages.push({\n            topic: topic,\n            payload: payloadColor\n        });\n    }\n    return messages;\n};\n\nconst generateSimpleMessages = (prefix) => {\n    const messages = [];\n    for (let i = 1; i <= 6; i++) {\n        const topic = `${prefix}${i}@cx_color`;\n        messages.push({\n            topic: topic,\n            payload: payloadColor\n        });\n    }\n    return messages;\n};\n\nconst allMessages = [];\n\n// Generate messages for l1, l2, l3\nfor (let group = 1; group <= 3; group++) {\n    allMessages.push(...generateMessages('l', group));\n}\n\n// Generate messages for p1 to p6\nallMessages.push(...generateSimpleMessages('p'));\n\n// Add single messages for holdworkpiece and workpiece\nallMessages.push({\n    topic: \"holdworkpiece@cx_color\",\n    payload: payloadColor\n});\n\nallMessages.push({\n    topic: \"workpiece@cx_color\",\n    payload: payloadColor\n});\n\n// Send all messages\nallMessages.forEach(msg => node.send(msg));\n\nreturn null; // Prevent further processing\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 580,
        "wires": [
            [
                "eaa566795cf414fa"
            ]
        ]
    },
    {
        "id": "eaa566795cf414fa",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "name": "link out 51",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 645,
        "y": 580,
        "wires": []
    },
    {
        "id": "393ee240bf1e5d47",
        "type": "change",
        "z": "d1258a138c1d9aca",
        "g": "23bc4fdaf41c77e5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "position_target",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2610,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "439356305001c3a2",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "1be0ba4d36d4fe56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 2310,
        "y": 320,
        "wires": [
            [
                "393ee240bf1e5d47"
            ]
        ]
    },
    {
        "id": "6fe410ecb2d06a5e",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "1be0ba4d36d4fe56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 2310,
        "y": 360,
        "wires": [
            [
                "393ee240bf1e5d47"
            ]
        ]
    },
    {
        "id": "cde52b07091342ea",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "1be0ba4d36d4fe56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3",
        "payloadType": "num",
        "x": 2310,
        "y": 400,
        "wires": [
            [
                "393ee240bf1e5d47"
            ]
        ]
    },
    {
        "id": "7a3f1dea40f11df3",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "1be0ba4d36d4fe56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 2310,
        "y": 280,
        "wires": [
            [
                "393ee240bf1e5d47"
            ]
        ]
    },
    {
        "id": "282c706588d25d96",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "9d12d8e1ae562be5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "#3E494D",
        "payloadType": "str",
        "x": 900,
        "y": 1780,
        "wires": [
            [
                "b4acf7b4f04cf694"
            ]
        ]
    },
    {
        "id": "b4acf7b4f04cf694",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "9d12d8e1ae562be5",
        "name": "Workpiece Color (Get data from FINS)",
        "func": "\nreturn {\n    payload: [\n        {\n            payload: msg.payload,\n            topic: 'workpiece@cx_color'\n        }\n    ]\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 1780,
        "wires": [
            [
                "d3fbb98dc8a0ee6e"
            ]
        ]
    },
    {
        "id": "a3bd063a4715999f",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "9d12d8e1ae562be5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "silver",
        "payloadType": "str",
        "x": 890,
        "y": 1820,
        "wires": [
            [
                "b4acf7b4f04cf694"
            ]
        ]
    },
    {
        "id": "93ec88d1320110a4",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "9d12d8e1ae562be5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "red",
        "payloadType": "str",
        "x": 890,
        "y": 1860,
        "wires": [
            [
                "b4acf7b4f04cf694"
            ]
        ]
    },
    {
        "id": "94e6fbbb620c60bd",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "9d12d8e1ae562be5",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "#ffffff00",
        "payloadType": "str",
        "x": 890,
        "y": 1900,
        "wires": [
            [
                "b4acf7b4f04cf694"
            ]
        ]
    },
    {
        "id": "d3fbb98dc8a0ee6e",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "9d12d8e1ae562be5",
        "name": "link out 52",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 1345,
        "y": 1780,
        "wires": []
    },
    {
        "id": "8620e2a7f12e1554",
        "type": "change",
        "z": "d1258a138c1d9aca",
        "g": "7b88dd142459488a",
        "name": "Current Color to Global",
        "rules": [
            {
                "t": "set",
                "p": "wp_color",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1990,
        "y": 1820,
        "wires": [
            []
        ]
    },
    {
        "id": "c38c0907a17d9f6a",
        "type": "context-get",
        "z": "d1258a138c1d9aca",
        "name": "",
        "variable": "",
        "scope": "global",
        "x": 1710,
        "y": 1980,
        "wires": [
            []
        ]
    },
    {
        "id": "10fc68894eb11586",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "3bf174fb986ebf16",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "#3E494D",
        "payloadType": "str",
        "x": 2280,
        "y": 1780,
        "wires": [
            [
                "d6c2105b75e10ec5"
            ]
        ]
    },
    {
        "id": "effdde2550dea669",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "3bf174fb986ebf16",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "silver",
        "payloadType": "str",
        "x": 2270,
        "y": 1820,
        "wires": [
            [
                "d6c2105b75e10ec5"
            ]
        ]
    },
    {
        "id": "865f9da0074b0934",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "3bf174fb986ebf16",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "red",
        "payloadType": "str",
        "x": 2270,
        "y": 1860,
        "wires": [
            [
                "d6c2105b75e10ec5"
            ]
        ]
    },
    {
        "id": "70d0fbbecd29ed40",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "3bf174fb986ebf16",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "#ffffff00",
        "payloadType": "str",
        "x": 2270,
        "y": 1900,
        "wires": [
            [
                "d6c2105b75e10ec5"
            ]
        ]
    },
    {
        "id": "d6c2105b75e10ec5",
        "type": "change",
        "z": "d1258a138c1d9aca",
        "g": "d6a8e3e24db7c665",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "wp_color",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2510,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "e21f698919d02d4f",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "1be0ba4d36d4fe56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4",
        "payloadType": "num",
        "x": 2310,
        "y": 440,
        "wires": [
            [
                "393ee240bf1e5d47"
            ]
        ]
    },
    {
        "id": "e48f47bea496f366",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "1be0ba4d36d4fe56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 2310,
        "y": 480,
        "wires": [
            [
                "393ee240bf1e5d47"
            ]
        ]
    },
    {
        "id": "2c56a954cf18b768",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "1be0ba4d36d4fe56",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "6",
        "payloadType": "num",
        "x": 2310,
        "y": 520,
        "wires": [
            [
                "393ee240bf1e5d47"
            ]
        ]
    },
    {
        "id": "57b96a9474438c29",
        "type": "change",
        "z": "d1258a138c1d9aca",
        "g": "829cca9a30732cde",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sequence_data",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2930,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "1964c9b1ebabdc2b",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 2630,
        "y": 500,
        "wires": [
            [
                "57b96a9474438c29"
            ]
        ]
    },
    {
        "id": "ef4ef21846ae36f2",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2",
        "payloadType": "num",
        "x": 2630,
        "y": 540,
        "wires": [
            [
                "57b96a9474438c29"
            ]
        ]
    },
    {
        "id": "c466069b69c43e3d",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "3",
        "payloadType": "num",
        "x": 2630,
        "y": 580,
        "wires": [
            [
                "57b96a9474438c29"
            ]
        ]
    },
    {
        "id": "1a6acf0639843569",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 2630,
        "y": 460,
        "wires": [
            [
                "57b96a9474438c29"
            ]
        ]
    },
    {
        "id": "50ec07f9b7144ee5",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "4",
        "payloadType": "num",
        "x": 2630,
        "y": 620,
        "wires": [
            [
                "57b96a9474438c29"
            ]
        ]
    },
    {
        "id": "5071ec1cfb82f113",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "5",
        "payloadType": "num",
        "x": 2630,
        "y": 660,
        "wires": [
            [
                "57b96a9474438c29"
            ]
        ]
    },
    {
        "id": "261d670554712e0b",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "6",
        "payloadType": "num",
        "x": 2630,
        "y": 700,
        "wires": [
            [
                "57b96a9474438c29"
            ]
        ]
    },
    {
        "id": "806a203fb95d1f56",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "10",
        "payloadType": "num",
        "x": 2630,
        "y": 860,
        "wires": [
            [
                "57b96a9474438c29"
            ]
        ]
    },
    {
        "id": "5043e069d4fb12a3",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "name": "Set Color to Shelf",
        "func": "// Function to check conditions and send the appropriate message\nfunction checkConditionsAndSend() {\n    // Read the variables from the global context\n    let levelTarget = global.get('level_target');\n    let positionTarget = global.get('position_target');\n    let sequenceData = global.get('sequence_data');\n    let wpColor = global.get('wp_color');\n\n    // Check if the common prerequisite is met\n    if (sequenceData === 10) {\n        // Check conditions for each level and position\n        if (levelTarget === 1 && positionTarget === 1) {\n            node.send({ payload: wpColor, topic: 'l1p1@cx_color' });\n            global.set('l1p1', wpColor);\n        } else if (levelTarget === 1 && positionTarget === 2) {\n            node.send({ payload: wpColor, topic: 'l1p2@cx_color' });\n            global.set('l1p2', wpColor);\n        } else if (levelTarget === 1 && positionTarget === 3) {\n            node.send({ payload: wpColor, topic: 'l1p3@cx_color' });\n            global.set('l1p3', wpColor);\n        } else if (levelTarget === 1 && positionTarget === 4) {\n            node.send({ payload: wpColor, topic: 'l1p4@cx_color' });\n            global.set('l1p4', wpColor);\n        } else if (levelTarget === 1 && positionTarget === 5) {\n            node.send({ payload: wpColor, topic: 'l1p5@cx_color' });\n            global.set('l1p5', wpColor);\n        } else if (levelTarget === 1 && positionTarget === 6) {\n            node.send({ payload: wpColor, topic: 'l1p6@cx_color' });\n            global.set('l1p6', wpColor);\n        } else if (levelTarget === 2 && positionTarget === 1) {\n            node.send({ payload: wpColor, topic: 'l2p1@cx_color' });\n            global.set('l2p1', wpColor);\n        } else if (levelTarget === 2 && positionTarget === 2) {\n            node.send({ payload: wpColor, topic: 'l2p2@cx_color' });\n            global.set('l2p2', wpColor);\n        } else if (levelTarget === 2 && positionTarget === 3) {\n            node.send({ payload: wpColor, topic: 'l2p3@cx_color' });\n            global.set('l2p3', wpColor);\n        } else if (levelTarget === 2 && positionTarget === 4) {\n            node.send({ payload: wpColor, topic: 'l2p4@cx_color' });\n            global.set('l2p4', wpColor);\n        } else if (levelTarget === 2 && positionTarget === 5) {\n            node.send({ payload: wpColor, topic: 'l2p5@cx_color' });\n            global.set('l2p5', wpColor);\n        } else if (levelTarget === 2 && positionTarget === 6) {\n            node.send({ payload: wpColor, topic: 'l2p6@cx_color' });\n            global.set('l2p6', wpColor);\n        } else if (levelTarget === 3 && positionTarget === 1) {\n            node.send({ payload: wpColor, topic: 'l3p1@cx_color' });\n            global.set('l3p1', wpColor);\n        } else if (levelTarget === 3 && positionTarget === 2) {\n            node.send({ payload: wpColor, topic: 'l3p2@cx_color' });\n            global.set('l3p2', wpColor);\n        } else if (levelTarget === 3 && positionTarget === 3) {\n            node.send({ payload: wpColor, topic: 'l3p3@cx_color' });\n            global.set('l3p3', wpColor);\n        } else if (levelTarget === 3 && positionTarget === 4) {\n            node.send({ payload: wpColor, topic: 'l3p4@cx_color' });\n            global.set('l3p4', wpColor);\n        } else if (levelTarget === 3 && positionTarget === 5) {\n            node.send({ payload: wpColor, topic: 'l3p5@cx_color' });\n            global.set('l3p5', wpColor);\n        } else if (levelTarget === 3 && positionTarget === 6) {\n            node.send({ payload: wpColor, topic: 'l3p6@cx_color' });\n            global.set('l3p6', wpColor);\n        }\n    }\n}\n\n// Call the function to check conditions and send the message\ncheckConditionsAndSend();\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2670,
        "y": 1120,
        "wires": [
            [
                "8679e89c3a01469b"
            ]
        ]
    },
    {
        "id": "411034bd751a0832",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.05",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2490,
        "y": 1120,
        "wires": [
            [
                "5043e069d4fb12a3"
            ]
        ]
    },
    {
        "id": "8c97912615623455",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "name": "link out 53",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 2965,
        "y": 1120,
        "wires": []
    },
    {
        "id": "c1ffb477228f7a15",
        "type": "debug",
        "z": "d1258a138c1d9aca",
        "name": "debug 48",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3000,
        "y": 1160,
        "wires": []
    },
    {
        "id": "8679e89c3a01469b",
        "type": "rbe",
        "z": "d1258a138c1d9aca",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2850,
        "y": 1120,
        "wires": [
            [
                "8c97912615623455",
                "c1ffb477228f7a15"
            ]
        ]
    },
    {
        "id": "5db5fe5abe326906",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "name": "Reset all data l1p1 and else",
        "func": "// Function to clear all the l1p1 to l3p6 global variables\nfunction clearAllLevelPositionVariables() {\n    for (let level = 1; level <= 3; level++) {\n        for (let position = 1; position <= 6; position++) {\n            let globalVarName = `l${level}p${position}`;\n            global.set(globalVarName, '#ffffff00'); // Clear the data of the global variable\n        }\n    }\n}\n\n// Call the function to clear all the level-position global variables\nclearAllLevelPositionVariables();\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "44997166b6cf597b",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "name": "Set Color to Top View",
        "func": "// Function to check conditions and send the appropriate message\nfunction checkConditionsAndSend() {\n    // Read the level_target variable from the global context\n    let levelTarget = global.get('level_target');\n\n    // Check conditions for each level and position\n    if (levelTarget === 1) {\n        let l1p1 = global.get('l1p1');\n        node.send({ payload: l1p1, topic: 'p1@cx_color' });\n        \n        let l1p2 = global.get('l1p2');\n        node.send({ payload: l1p2, topic: 'p2@cx_color' });\n        \n        let l1p3 = global.get('l1p3');\n        node.send({ payload: l1p3, topic: 'p3@cx_color' });\n        \n        let l1p4 = global.get('l1p4');\n        node.send({ payload: l1p4, topic: 'p4@cx_color' });\n        \n        let l1p5 = global.get('l1p5');\n        node.send({ payload: l1p5, topic: 'p5@cx_color' });\n        \n        let l1p6 = global.get('l1p6');\n        node.send({ payload: l1p6, topic: 'p6@cx_color' });\n\n    } else if (levelTarget === 2) {\n        let l2p1 = global.get('l2p1');\n        node.send({ payload: l2p1, topic: 'p1@cx_color' });\n        \n        let l2p2 = global.get('l2p2');\n        node.send({ payload: l2p2, topic: 'p2@cx_color' });\n        \n        let l2p3 = global.get('l2p3');\n        node.send({ payload: l2p3, topic: 'p3@cx_color' });\n        \n        let l2p4 = global.get('l2p4');\n        node.send({ payload: l2p4, topic: 'p4@cx_color' });\n        \n        let l2p5 = global.get('l2p5');\n        node.send({ payload: l2p5, topic: 'p5@cx_color' });\n        \n        let l2p6 = global.get('l2p6');\n        node.send({ payload: l2p6, topic: 'p6@cx_color' });\n\n    } else if (levelTarget === 3) {\n        let l3p1 = global.get('l3p1');\n        node.send({ payload: l3p1, topic: 'p1@cx_color' });\n        \n        let l3p2 = global.get('l3p2');\n        node.send({ payload: l3p2, topic: 'p2@cx_color' });\n        \n        let l3p3 = global.get('l3p3');\n        node.send({ payload: l3p3, topic: 'p3@cx_color' });\n        \n        let l3p4 = global.get('l3p4');\n        node.send({ payload: l3p4, topic: 'p4@cx_color' });\n        \n        let l3p5 = global.get('l3p5');\n        node.send({ payload: l3p5, topic: 'p5@cx_color' });\n        \n        let l3p6 = global.get('l3p6');\n        node.send({ payload: l3p6, topic: 'p6@cx_color' });\n    }\n}\n\n// Call the function to check conditions and send the message\ncheckConditionsAndSend();\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2680,
        "y": 1240,
        "wires": [
            [
                "a00119de87a55f07"
            ]
        ]
    },
    {
        "id": "fd1c28c2618e24a9",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.05",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2490,
        "y": 1240,
        "wires": [
            [
                "44997166b6cf597b"
            ]
        ]
    },
    {
        "id": "1107684a96330335",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "name": "link out 54",
        "mode": "link",
        "links": [
            "9376fcb531b70f63"
        ],
        "x": 2965,
        "y": 1240,
        "wires": []
    },
    {
        "id": "72bdf0e547f899f8",
        "type": "debug",
        "z": "d1258a138c1d9aca",
        "name": "debug 49",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3000,
        "y": 1280,
        "wires": []
    },
    {
        "id": "a00119de87a55f07",
        "type": "rbe",
        "z": "d1258a138c1d9aca",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2850,
        "y": 1240,
        "wires": [
            [
                "1107684a96330335",
                "72bdf0e547f899f8"
            ]
        ]
    },
    {
        "id": "474a9f01ccc86b02",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 500,
        "wires": [
            [
                "5db5fe5abe326906"
            ]
        ]
    },
    {
        "id": "aba3399f5ea1e71d",
        "type": "ui_text",
        "z": "d1258a138c1d9aca",
        "group": "727df6176172cba7",
        "order": 2,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Position",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 3020,
        "y": 120,
        "wires": []
    },
    {
        "id": "fb186bb950c7b94c",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.05",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2490,
        "y": 120,
        "wires": [
            [
                "a1bccc255913aa85"
            ]
        ]
    },
    {
        "id": "b8dae40a1abd100b",
        "type": "rbe",
        "z": "d1258a138c1d9aca",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2850,
        "y": 120,
        "wires": [
            [
                "aba3399f5ea1e71d"
            ]
        ]
    },
    {
        "id": "a1bccc255913aa85",
        "type": "context-get",
        "z": "d1258a138c1d9aca",
        "name": "",
        "variable": "position_target",
        "scope": "global",
        "x": 2670,
        "y": 120,
        "wires": [
            [
                "b8dae40a1abd100b"
            ]
        ]
    },
    {
        "id": "5272644e13e0900c",
        "type": "ui_text",
        "z": "d1258a138c1d9aca",
        "group": "727df6176172cba7",
        "order": 7,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Sequence",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 3020,
        "y": 160,
        "wires": []
    },
    {
        "id": "6e5445ad740af2cd",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.05",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 2490,
        "y": 160,
        "wires": [
            [
                "8ab1a92cbb08f669"
            ]
        ]
    },
    {
        "id": "de46566e2364d6af",
        "type": "rbe",
        "z": "d1258a138c1d9aca",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2850,
        "y": 160,
        "wires": [
            [
                "5272644e13e0900c"
            ]
        ]
    },
    {
        "id": "8ab1a92cbb08f669",
        "type": "context-get",
        "z": "d1258a138c1d9aca",
        "name": "",
        "variable": "sequence_data",
        "scope": "global",
        "x": 2670,
        "y": 160,
        "wires": [
            [
                "de46566e2364d6af"
            ]
        ]
    },
    {
        "id": "3faddc5e360ef65d",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "117",
        "payloadType": "num",
        "x": 370,
        "y": 1060,
        "wires": [
            [
                "33a67384ab089597"
            ]
        ]
    },
    {
        "id": "33a67384ab089597",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "link out 55",
        "mode": "link",
        "links": [
            "5994370d030e9397"
        ],
        "x": 455,
        "y": 1060,
        "wires": []
    },
    {
        "id": "a3b7949ab92eb6e6",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "98",
        "payloadType": "num",
        "x": 370,
        "y": 1100,
        "wires": [
            [
                "7a32afd957eec1b5"
            ]
        ]
    },
    {
        "id": "7a32afd957eec1b5",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "link out 56",
        "mode": "link",
        "links": [
            "5994370d030e9397"
        ],
        "x": 455,
        "y": 1100,
        "wires": []
    },
    {
        "id": "28fe7a0e0044c06c",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "75",
        "payloadType": "num",
        "x": 370,
        "y": 1140,
        "wires": [
            [
                "1cc13e9e1d7966d9"
            ]
        ]
    },
    {
        "id": "1cc13e9e1d7966d9",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "link out 57",
        "mode": "link",
        "links": [
            "5994370d030e9397"
        ],
        "x": 455,
        "y": 1140,
        "wires": []
    },
    {
        "id": "6eb2702ec66a3a1b",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "53",
        "payloadType": "num",
        "x": 370,
        "y": 1180,
        "wires": [
            [
                "5567807427c15d35"
            ]
        ]
    },
    {
        "id": "5567807427c15d35",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "link out 58",
        "mode": "link",
        "links": [
            "5994370d030e9397"
        ],
        "x": 455,
        "y": 1180,
        "wires": []
    },
    {
        "id": "02651f5131b0b3c2",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "31",
        "payloadType": "num",
        "x": 370,
        "y": 1220,
        "wires": [
            [
                "fc50e90573f2108c"
            ]
        ]
    },
    {
        "id": "fc50e90573f2108c",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "link out 59",
        "mode": "link",
        "links": [
            "5994370d030e9397"
        ],
        "x": 455,
        "y": 1220,
        "wires": []
    },
    {
        "id": "2002dd6d71997414",
        "type": "link in",
        "z": "d1258a138c1d9aca",
        "g": "e624532f94b38939",
        "name": "link in 18",
        "links": [
            "80fa362a3942e24d",
            "5a05a13cf467a2a4",
            "805bb529fa16caa0",
            "0c8494e29d32ad5a",
            "96fcbfa8d56a36e7",
            "dcb7df177f53913f",
            "301a6ef58cb1fc04",
            "be6a419e718a8dc9",
            "ed6b635d51cf9762",
            "476e88563af3aaa6"
        ],
        "x": 1645,
        "y": 980,
        "wires": [
            [
                "cae5c5af91c625c6"
            ]
        ]
    },
    {
        "id": "80fa362a3942e24d",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "a6734c00bf0e0f0d",
        "name": "link out 60",
        "mode": "link",
        "links": [
            "2002dd6d71997414"
        ],
        "x": 1655,
        "y": 1100,
        "wires": []
    },
    {
        "id": "5a05a13cf467a2a4",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "a6734c00bf0e0f0d",
        "name": "link out 61",
        "mode": "link",
        "links": [
            "2002dd6d71997414"
        ],
        "x": 1655,
        "y": 1140,
        "wires": []
    },
    {
        "id": "be6a419e718a8dc9",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "a6734c00bf0e0f0d",
        "name": "link out 62",
        "mode": "link",
        "links": [
            "2002dd6d71997414"
        ],
        "x": 1655,
        "y": 1180,
        "wires": []
    },
    {
        "id": "ef594e58255d0af8",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "a6734c00bf0e0f0d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-28",
        "payloadType": "num",
        "x": 1750,
        "y": 1100,
        "wires": [
            [
                "805bb529fa16caa0"
            ]
        ]
    },
    {
        "id": "805bb529fa16caa0",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "a6734c00bf0e0f0d",
        "name": "link out 63",
        "mode": "link",
        "links": [
            "2002dd6d71997414"
        ],
        "x": 1835,
        "y": 1100,
        "wires": []
    },
    {
        "id": "0dfe2c8b852bf8d4",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "a6734c00bf0e0f0d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-25",
        "payloadType": "num",
        "x": 1750,
        "y": 1140,
        "wires": [
            [
                "0c8494e29d32ad5a"
            ]
        ]
    },
    {
        "id": "0c8494e29d32ad5a",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "a6734c00bf0e0f0d",
        "name": "link out 64",
        "mode": "link",
        "links": [
            "2002dd6d71997414"
        ],
        "x": 1835,
        "y": 1140,
        "wires": []
    },
    {
        "id": "86227f5f6a5e40b4",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "a6734c00bf0e0f0d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-23",
        "payloadType": "num",
        "x": 1750,
        "y": 1180,
        "wires": [
            [
                "96fcbfa8d56a36e7"
            ]
        ]
    },
    {
        "id": "96fcbfa8d56a36e7",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "a6734c00bf0e0f0d",
        "name": "link out 65",
        "mode": "link",
        "links": [
            "2002dd6d71997414"
        ],
        "x": 1835,
        "y": 1180,
        "wires": []
    },
    {
        "id": "f16bd81456122a34",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "a6734c00bf0e0f0d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-26",
        "payloadType": "num",
        "x": 1930,
        "y": 1100,
        "wires": [
            [
                "dcb7df177f53913f"
            ]
        ]
    },
    {
        "id": "dcb7df177f53913f",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "a6734c00bf0e0f0d",
        "name": "link out 66",
        "mode": "link",
        "links": [
            "2002dd6d71997414"
        ],
        "x": 2015,
        "y": 1100,
        "wires": []
    },
    {
        "id": "74e5c1fcf8b1dfe4",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "a6734c00bf0e0f0d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "-33",
        "payloadType": "num",
        "x": 1930,
        "y": 1140,
        "wires": [
            [
                "301a6ef58cb1fc04"
            ]
        ]
    },
    {
        "id": "301a6ef58cb1fc04",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "a6734c00bf0e0f0d",
        "name": "link out 67",
        "mode": "link",
        "links": [
            "2002dd6d71997414"
        ],
        "x": 2015,
        "y": 1140,
        "wires": []
    },
    {
        "id": "ecadba9b2be4d1de",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "e624532f94b38939",
        "name": "function 164",
        "func": "// Function to check conditions and send the appropriate message\nfunction checkConditionsAndSend() {\n    // Read the variables from the global context\n    let sequenceData = global.get('sequence_data');\n    let positionTarget = global.get('position_target');\n\n    let payload;\n\n    // Determine the payload based on the sequence data and position target\n    if (sequenceData === 9) {\n        if (positionTarget === 0) {\n            payload = -42;\n        } else if (positionTarget === 1) {\n            payload = -33;\n        } else if (positionTarget === 2) {\n            payload = -26;\n        } else if (positionTarget === 3) {\n            payload = -23;\n        } else if (positionTarget === 4) {\n            payload = -25;\n        } else if (positionTarget === 5) {\n            payload = -28;\n        } else if (positionTarget === 6) {\n            payload = -41;\n        }\n    } else if (sequenceData === 7 || sequenceData === 11) {\n        payload = 0;\n    } else if (sequenceData === 3 || sequenceData === 14) {\n        payload = -42;\n    }\n\n    // Create and send the message\n    if (payload !== undefined) {\n        let msg = {\n            payload: payload,\n            topic: `position${positionTarget}@data`\n        };\n        node.send(msg);\n    }\n}\n\n// Call the function to check conditions and send the message\ncheckConditionsAndSend();\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1710,
        "y": 1040,
        "wires": [
            [
                "1fecf06a7d234d87"
            ]
        ]
    },
    {
        "id": "ed6b635d51cf9762",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "e624532f94b38939",
        "name": "link out 68",
        "mode": "link",
        "links": [
            "2002dd6d71997414"
        ],
        "x": 1945,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1fecf06a7d234d87",
        "type": "rbe",
        "z": "d1258a138c1d9aca",
        "g": "e624532f94b38939",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1850,
        "y": 1040,
        "wires": [
            [
                "ed6b635d51cf9762"
            ]
        ]
    },
    {
        "id": "cfe1be153db13834",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "e624532f94b38939",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1530,
        "y": 1040,
        "wires": [
            [
                "ecadba9b2be4d1de"
            ]
        ]
    },
    {
        "id": "4faae1ad554294d4",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "function 165",
        "func": "// Function to check conditions and send the appropriate message for sequence_data = 1, 8, or 12\nfunction checkConditionsAndSendForSpecificSequences() {\n    // Read the variables from the global context\n    let sequenceData = global.get('sequence_data');\n    let positionTarget = global.get('position_target');\n\n    let payload;\n\n    // Check if the sequence data is 8 and determine the payload based on the position target\n    if (sequenceData === 8) {\n        if (positionTarget === 1) {\n            payload = 31;\n        } else if (positionTarget === 2) {\n            payload = 53;\n        } else if (positionTarget === 3) {\n            payload = 75;\n        } else if (positionTarget === 4) {\n            payload = 98;\n        } else if (positionTarget === 5) {\n            payload = 117;\n        } else if (positionTarget === 6) {\n            payload = 138;\n        }\n    } else if (sequenceData === 1 || sequenceData === 12) {\n        payload = 0;\n    }\n\n    // Create and send the message\n    if (payload !== undefined) {\n        let msg = {\n            payload: payload,\n            topic: `position${positionTarget}@data`\n        };\n        node.send(msg);\n    }\n}\n\n// Call the function to check conditions and send the message for specific sequences\ncheckConditionsAndSendForSpecificSequences();\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 1400,
        "wires": [
            [
                "e1d4c6ade7d09bab"
            ]
        ]
    },
    {
        "id": "e1d4c6ade7d09bab",
        "type": "rbe",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 710,
        "y": 1400,
        "wires": [
            [
                "e0c2dd9114fdabf0"
            ]
        ]
    },
    {
        "id": "c4be188918046853",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.1",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 390,
        "y": 1400,
        "wires": [
            [
                "4faae1ad554294d4"
            ]
        ]
    },
    {
        "id": "e0c2dd9114fdabf0",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "4841c9fc618956e0",
        "name": "link out 69",
        "mode": "link",
        "links": [
            "5994370d030e9397"
        ],
        "x": 805,
        "y": 1400,
        "wires": []
    },
    {
        "id": "87ca13916f032e31",
        "type": "function",
        "z": "d1258a138c1d9aca",
        "name": "Reset Data level_target, position_target, sequence_data, wp_color",
        "func": "// Function to clear specific global variables\nfunction clearSpecificGlobalVariables() {\n    // List of global variables to clear\n    let variablesToClear = ['level_target', 'position_target', 'sequence_data', 'wp_color'];\n\n    // Clear each global variable by setting its value to an empty string\n    variablesToClear.forEach(variable => {\n        global.set(variable, '0'); // Clear the data of the global variable\n    });\n}\n\n// Call the function to clear the specified global variables\nclearSpecificGlobalVariables();\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "5778532d1a8b3964",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 460,
        "wires": [
            [
                "87ca13916f032e31"
            ]
        ]
    },
    {
        "id": "869e3c53499b69c3",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "7",
        "payloadType": "num",
        "x": 2630,
        "y": 740,
        "wires": [
            [
                "14dd4fdc2b997e46"
            ]
        ]
    },
    {
        "id": "14dd4fdc2b997e46",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "link out 70",
        "mode": "link",
        "links": [
            "d58a56dc5d967ea7"
        ],
        "x": 2735,
        "y": 740,
        "wires": []
    },
    {
        "id": "d58a56dc5d967ea7",
        "type": "link in",
        "z": "d1258a138c1d9aca",
        "g": "829cca9a30732cde",
        "name": "link in 19",
        "links": [
            "14dd4fdc2b997e46",
            "65e56db5f1bfabfe",
            "28b5067dd9ae161e",
            "5c141cb23ab4688b",
            "0c1bd7f7bfca7e71",
            "fd4b17e5c4b5e011",
            "9ac1951c15e5240f"
        ],
        "x": 2815,
        "y": 520,
        "wires": [
            [
                "57b96a9474438c29"
            ]
        ]
    },
    {
        "id": "52557f95afa1477e",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "8",
        "payloadType": "num",
        "x": 2630,
        "y": 780,
        "wires": [
            [
                "65e56db5f1bfabfe"
            ]
        ]
    },
    {
        "id": "65e56db5f1bfabfe",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "link out 71",
        "mode": "link",
        "links": [
            "d58a56dc5d967ea7"
        ],
        "x": 2735,
        "y": 780,
        "wires": []
    },
    {
        "id": "05e90e3ff2b4cd45",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "9",
        "payloadType": "num",
        "x": 2630,
        "y": 820,
        "wires": [
            [
                "28b5067dd9ae161e"
            ]
        ]
    },
    {
        "id": "28b5067dd9ae161e",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "link out 72",
        "mode": "link",
        "links": [
            "d58a56dc5d967ea7"
        ],
        "x": 2735,
        "y": 820,
        "wires": []
    },
    {
        "id": "3d9d467ce6d1c908",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "11",
        "payloadType": "num",
        "x": 2630,
        "y": 900,
        "wires": [
            [
                "5c141cb23ab4688b"
            ]
        ]
    },
    {
        "id": "5c141cb23ab4688b",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "link out 73",
        "mode": "link",
        "links": [
            "d58a56dc5d967ea7"
        ],
        "x": 2735,
        "y": 900,
        "wires": []
    },
    {
        "id": "5649f67a087b6931",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "12",
        "payloadType": "num",
        "x": 2630,
        "y": 940,
        "wires": [
            [
                "0c1bd7f7bfca7e71"
            ]
        ]
    },
    {
        "id": "0c1bd7f7bfca7e71",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "link out 74",
        "mode": "link",
        "links": [
            "d58a56dc5d967ea7"
        ],
        "x": 2735,
        "y": 940,
        "wires": []
    },
    {
        "id": "01a1540fede116bd",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "13",
        "payloadType": "num",
        "x": 2630,
        "y": 980,
        "wires": [
            [
                "fd4b17e5c4b5e011"
            ]
        ]
    },
    {
        "id": "fd4b17e5c4b5e011",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "link out 75",
        "mode": "link",
        "links": [
            "d58a56dc5d967ea7"
        ],
        "x": 2735,
        "y": 980,
        "wires": []
    },
    {
        "id": "760456f1c8bcf7e4",
        "type": "inject",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "14",
        "payloadType": "num",
        "x": 2630,
        "y": 1020,
        "wires": [
            [
                "9ac1951c15e5240f"
            ]
        ]
    },
    {
        "id": "9ac1951c15e5240f",
        "type": "link out",
        "z": "d1258a138c1d9aca",
        "g": "2c234315dbd56053",
        "name": "link out 76",
        "mode": "link",
        "links": [
            "d58a56dc5d967ea7"
        ],
        "x": 2735,
        "y": 1020,
        "wires": []
    },
    {
        "id": "d23230540cbaadab",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "e7dc2a41650b9fe8",
        "order": 3,
        "width": 30,
        "height": 1
    },
    {
        "id": "10d206e308096921",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "e7dc2a41650b9fe8",
        "order": 4,
        "width": 30,
        "height": 1
    },
    {
        "id": "7958e15551144895",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "e7dc2a41650b9fe8",
        "order": 5,
        "width": 30,
        "height": 1
    },
    {
        "id": "8a61ca31e55035e9",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "e7dc2a41650b9fe8",
        "order": 6,
        "width": 30,
        "height": 1
    },
    {
        "id": "57ed639e653aac9a",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "e7dc2a41650b9fe8",
        "order": 7,
        "width": 30,
        "height": 1
    },
    {
        "id": "58a1258d349a88f0",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "e7dc2a41650b9fe8",
        "order": 8,
        "width": 30,
        "height": 1
    },
    {
        "id": "555e608c97c791c4",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "e7dc2a41650b9fe8",
        "order": 9,
        "width": 30,
        "height": 1
    },
    {
        "id": "d53323f6aa2be506",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "e7dc2a41650b9fe8",
        "order": 10,
        "width": 30,
        "height": 1
    },
    {
        "id": "7739349dbbbf3fa2",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "e7dc2a41650b9fe8",
        "order": 11,
        "width": 30,
        "height": 1
    },
    {
        "id": "dfd57a409475b9eb",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "e7dc2a41650b9fe8",
        "order": 13,
        "width": 30,
        "height": 1
    },
    {
        "id": "6a5ae446b55b0b36",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "e7dc2a41650b9fe8",
        "order": 14,
        "width": 30,
        "height": 1
    },
    {
        "id": "ecc8a71d347909cf",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "e7dc2a41650b9fe8",
        "order": 15,
        "width": 30,
        "height": 1
    },
    {
        "id": "34b2572b7c1e068b",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "e7dc2a41650b9fe8",
        "order": 16,
        "width": 30,
        "height": 1
    },
    {
        "id": "e924a485483e566d",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "e7dc2a41650b9fe8",
        "order": 17,
        "width": 30,
        "height": 1
    },
    {
        "id": "95dc4be00184174d",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "e7dc2a41650b9fe8",
        "order": 18,
        "width": 30,
        "height": 1
    },
    {
        "id": "c46c105ccbe46764",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "e7dc2a41650b9fe8",
        "order": 19,
        "width": 30,
        "height": 1
    },
    {
        "id": "a5a892e373204bc0",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "e7dc2a41650b9fe8",
        "order": 20,
        "width": 30,
        "height": 1
    },
    {
        "id": "2cf57beb8e958a83",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "e7dc2a41650b9fe8",
        "order": 21,
        "width": 30,
        "height": 1
    },
    {
        "id": "81b722a1c0ad3e3b",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "5e16685fcb1b9af7",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 5,
        "width": 2,
        "height": 1
    },
    {
        "id": "c71163b2a8236d1d",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "0ef888d120b83015",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 8,
        "width": 2,
        "height": 1
    },
    {
        "id": "02e4eeafa093252e",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 9,
        "width": 8,
        "height": 1
    },
    {
        "id": "811c2fe2224ec2eb",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "61d095132dbaf105",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 11,
        "width": 8,
        "height": 1
    },
    {
        "id": "a3cd065306f5d3b7",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 12,
        "width": 2,
        "height": 1
    },
    {
        "id": "b92f3c34ebd7829f",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 13,
        "width": 8,
        "height": 1
    },
    {
        "id": "d969bdc4796a710a",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 14,
        "width": 2,
        "height": 1
    },
    {
        "id": "d5b25adf8f68ca8e",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 15,
        "width": 8,
        "height": 1
    },
    {
        "id": "a03dd0729e491a04",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 16,
        "width": 2,
        "height": 1
    },
    {
        "id": "d7e7a2214e1e3476",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 17,
        "width": 8,
        "height": 1
    },
    {
        "id": "f8e466d53ec70adb",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 18,
        "width": 2,
        "height": 1
    },
    {
        "id": "31d69f3e0d9708dc",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 19,
        "width": 8,
        "height": 1
    },
    {
        "id": "4db39c15ddfa57c1",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 20,
        "width": 2,
        "height": 1
    },
    {
        "id": "eaa1e232137edd73",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 21,
        "width": 8,
        "height": 1
    },
    {
        "id": "7fe57a8c84601ef4",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 22,
        "width": 2,
        "height": 1
    },
    {
        "id": "ad1a66d81a125cbf",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 23,
        "width": 8,
        "height": 1
    },
    {
        "id": "98fb7008081e4090",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 24,
        "width": 2,
        "height": 1
    },
    {
        "id": "f4ebddc7fdd42789",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 25,
        "width": 24,
        "height": 1
    },
    {
        "id": "a2cbca8304faceaf",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 27,
        "width": 1,
        "height": 1
    },
    {
        "id": "8355dff720ca88b1",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 28,
        "width": 24,
        "height": 1
    },
    {
        "id": "9642342e47530b6b",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 30,
        "width": 1,
        "height": 1
    },
    {
        "id": "aec518a513b6c701",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 31,
        "width": 24,
        "height": 1
    },
    {
        "id": "f21e78535213b829",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 33,
        "width": 1,
        "height": 1
    },
    {
        "id": "f535348ab12fe414",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 34,
        "width": 24,
        "height": 1
    },
    {
        "id": "92ed80ed892b7856",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 36,
        "width": 1,
        "height": 1
    },
    {
        "id": "107d9dd20371cf9c",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 37,
        "width": 30,
        "height": 1
    },
    {
        "id": "a99d0fc881f7509d",
        "type": "ui_spacer",
        "z": "d1258a138c1d9aca",
        "name": "spacer",
        "group": "727df6176172cba7",
        "order": 38,
        "width": 30,
        "height": 1
    },
    {
        "id": "727df6176172cba7",
        "type": "ui_group",
        "name": "Demo",
        "tab": "362b60fac7f0ec25",
        "order": 1,
        "disp": true,
        "width": 30,
        "collapse": false,
        "className": ""
    },
    {
        "id": "61376b9982037186",
        "type": "ui_group",
        "name": "Availability",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e7dc2a41650b9fe8",
        "type": "ui_group",
        "name": "Main",
        "tab": "45f8b09736298d8f",
        "order": 1,
        "disp": true,
        "width": 30,
        "collapse": false,
        "className": ""
    },
    {
        "id": "362b60fac7f0ec25",
        "type": "ui_tab",
        "name": "Prototype",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "45f8b09736298d8f",
        "type": "ui_tab",
        "d": true,
        "name": "Storing Station",
        "icon": "dashboard",
        "order": 23,
        "disabled": false,
        "hidden": false
    }
]